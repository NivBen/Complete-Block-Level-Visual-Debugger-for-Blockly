{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///../debuggee/init.js","webpack:///../debuggee/actions/continue.js","webpack:///../debuggee/actions/breakpoints.js","webpack:///../debuggee/actions/steps.js","webpack:///../debuggee/debuggee.js","webpack:///../debuggee/actions/start.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","r","value","n","__esModule","object","property","prototype","hasOwnProperty","p","s","window","alert","msg","postMessage","type","data","prompt","async","undefined","flags","promptMsg","next_message","tmp","Blockly_Debuggee","actions","state","currNest","currId","stepWait","currState","stepIn","stepOver","stepParent","stepOut","continue","isState","this","setState","new_state","wait","ms","Promise","resolve","setTimeout","nest","block_id","CurrentSystemEditorId","id","highlightBlock","hasBreakpoint","breakpoint","includes","cursorBreakpoint","dispatcher","init","handler","breakpoints","br","update","updated","runToCursor","onmessage","obj","start_debugging","content","eval","code","$id","wait_call","isStepOver","isStepParent","_init_js__WEBPACK_IMPORTED_MODULE_0__"],"mappings":"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","file":"debuggee.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","export var window = {\r\n    alert : function(msg) {\r\n      postMessage({\"type\": \"alert\", \"data\" : msg});\r\n    },\r\n    prompt : async function (msg){\r\n      postMessage({\"type\": \"prompt\", \"data\" : msg});\r\n      while(flags.promptMsg == undefined){\r\n        await next_message();\r\n      }\r\n      var tmp = flags.promptMsg;\r\n      flags.promptMsg = undefined;\r\n      return tmp;\r\n    }\r\n} ;  \r\n\r\nexport var Blockly_Debuggee = {};\r\nBlockly_Debuggee.actions = {};\r\n\r\nBlockly_Debuggee.state = {\r\n  currNest : 0,\r\n  currId : '',\r\n  promptMsg : undefined,\r\n  stepWait : false,\r\n  currState: {\r\n    stepIn : false,\r\n    stepOver : false,\r\n    stepParent : false,\r\n    stepOut : false,\r\n    continue : true\r\n  },\r\n  isState: function(state){\r\n    return this.currState[state];\r\n  },\r\n  setState: function(new_state) {\r\n    this.currState[\"stepIn\"] = false;\r\n    this.currState[\"stepOver\"] = false;\r\n    this.currState[\"stepParent\"] = false;\r\n    this.currState[\"stepOut\"] = false;\r\n    this.currState[\"continue\"] = false;\r\n    this.currState[new_state] = true;\r\n  }\r\n};\r\n\r\n\r\nBlockly_Debuggee.wait = (function(){\r\n  function highlightBlock(id, CurrentSystemEditorId){\r\n    postMessage({\"type\": \"highlightBlock\", \"data\" : {\"id\" : id, \"CurrentSystemEditorId\" : CurrentSystemEditorId}});\r\n  }\r\n\r\n  function sleep(ms) {\r\n    return new Promise(resolve => setTimeout(resolve, ms));\r\n  }\r\n  \r\n  function next_message() { \r\n    return sleep(0); \r\n  }\r\n\r\n  async function wait(nest, block_id, CurrentSystemEditorId){\r\n    highlightBlock(block_id, CurrentSystemEditorId);\r\n    var hasBreakpoint = Blockly_Debuggee.actions.breakpoint.includes(block_id) || (Blockly_Debuggee.actions[\"runToCursor\"].cursorBreakpoint === block_id);\r\n    // if(Blockly_Debuggee.actions[\"runToCursor\"].cursorBreakpoint !== \"\" ){\r\n    //   console.log(\"!!! \" + Blockly_Debuggee.actions[\"runToCursor\"].cursorBreakpoint);\r\n    // }\r\n    if(Blockly_Debuggee.state.isState(\"continue\") && !hasBreakpoint){ \r\n      Blockly_Debuggee.state.currNest = nest;   \r\n      return;\r\n    }\r\n    if(Blockly_Debuggee.state.currNest == -1 && !hasBreakpoint) return;    // stepOver + stepOut for functions                   \r\n      if(Blockly_Debuggee.state.isState(\"stepIn\") || hasBreakpoint || nest <= Blockly_Debuggee.state.currNest){\r\n        if(Blockly_Debuggee.state.currId  === block_id && !hasBreakpoint) return;\r\n        if(Blockly_Debuggee.state.isState(\"stepParent\") && nest == Blockly_Debuggee.state.currNest && !hasBreakpoint) return;\r\n        while(!Blockly_Debuggee.state.stepWait){\r\n            await next_message();\r\n        }\r\n        Blockly_Debuggee.state.stepWait = false;\r\n        Blockly_Debuggee.state.currId = block_id;\r\n        if(Blockly_Debuggee.state.isState(\"stepOut\")){\r\n            Blockly_Debuggee.state.currNest = -1;\r\n            Blockly_Debuggee.state.currState.stepOut = false;                                  \r\n        }else{\r\n            Blockly_Debuggee.state.currNest = nest;\r\n        }       \r\n    }\r\n  };\r\n\r\n  return wait;  \r\n})();\r\n\r\nexport var dispatcher = {\r\n  prompt : (promptMsg) => {\r\n    flags.promptMsg = promptMsg;\r\n  }\r\n};\r\n\r\n\r\n\r\n","import {Blockly_Debuggee, dispatcher} from '../init.js';\r\n\r\nBlockly_Debuggee.actions.continue = {};\r\n\r\nBlockly_Debuggee.actions.continue.handler = () => {\r\n  Blockly_Debuggee.state.stepWait = true;\r\n  Blockly_Debuggee.state.setState(\"continue\");\r\n};\r\n\r\ndispatcher.continue = Blockly_Debuggee.actions[\"continue\"].handler;","import {Blockly_Debuggee, dispatcher} from '../init.js';\r\n\r\nBlockly_Debuggee.actions[\"breakpoint\"] = {};\r\n\r\nBlockly_Debuggee.actions[\"breakpoint\"] = (function(){\r\n    var breakpoints = [];\r\n    function handler(br){\r\n        breakpoints = br;\r\n    };\r\n\r\n    function includes(block_id){\r\n        return breakpoints.includes(block_id);\r\n    };\r\n    \r\n    function update(updated){\r\n        breakpoints = updated;\r\n    };\r\n\r\n    return {\r\n        handler : handler,\r\n        includes: includes,\r\n        update : update\r\n    };\r\n\r\n})();\r\n\r\n\r\nBlockly_Debuggee.actions[\"runToCursor\"] = (function(){\r\n    var cursorBreakpoint = \"\";\r\n    function handler(block_id){\r\n        Blockly_Debuggee.actions[\"runToCursor\"].cursorBreakpoint = block_id;\r\n        Blockly_Debuggee.state.stepWait = true;\r\n        //console.log(\"cursorBreakpoint:   \" + this.cursorBreakpoint);\r\n    }\r\n\r\n    return {\r\n        cursorBreakpoint : cursorBreakpoint,\r\n        handler : handler\r\n    }\r\n})();\r\n\r\n\r\n\r\ndispatcher.breakpoint = Blockly_Debuggee.actions[\"breakpoint\"].handler;\r\ndispatcher.runToCursor = Blockly_Debuggee.actions[\"runToCursor\"].handler;\r\n","import {Blockly_Debuggee, dispatcher} from '../init.js';\r\n\r\nBlockly_Debuggee.actions.stepIn = {};\r\nBlockly_Debuggee.actions.stepOver = {};\r\nBlockly_Debuggee.actions.stepOut = {};\r\nBlockly_Debuggee.actions.stepParent = {};\r\n\r\nBlockly_Debuggee.actions.stepIn.handler = () => {\r\n    Blockly_Debuggee.state.stepWait = true;\r\n    Blockly_Debuggee.state.setState(\"stepIn\");\r\n};\r\n\r\nBlockly_Debuggee.actions.stepOver.handler = () => {\r\n  Blockly_Debuggee.state.stepWait = true;\r\n  Blockly_Debuggee.state.setState(\"stepOver\");\r\n};\r\n\r\nBlockly_Debuggee.actions.stepOut.handler = () => {\r\n  Blockly_Debuggee.state.stepWait = true;\r\n  Blockly_Debuggee.state.setState(\"stepOut\");\r\n};\r\n\r\nBlockly_Debuggee.actions.stepParent.handler = () => {\r\n  Blockly_Debuggee.state.stepWait = true;\r\n  Blockly_Debuggee.state.setState(\"stepParent\");\r\n};\r\n\r\ndispatcher.stepIn = Blockly_Debuggee.actions[\"stepIn\"].handler;\r\ndispatcher.stepOver = Blockly_Debuggee.actions[\"stepOver\"].handler;\r\ndispatcher.stepOut = Blockly_Debuggee.actions[\"stepOut\"].handler;\r\ndispatcher.stepParent = Blockly_Debuggee.actions[\"stepParent\"].handler;","import \"./init.js\";\r\nimport {dispatcher} from \"./init.js\";\r\nimport './actions/actions.js';\r\n\r\nonmessage = function (msg) {\r\n    let obj = msg.data;\r\n    dispatcher[obj.type](obj.data);\r\n}","import '../init.js';\r\nimport {dispatcher} from '../init.js';\r\nvar Blockly_Debuggee = require(\"../init.js\").Blockly_Debuggee;\r\nvar window = require(\"../init.js\").window;\r\n\r\nBlockly_Debuggee.actions.start_debugging = (function (){\r\n    async function handler(content){\r\n        if(content!=undefined){        \r\n            Blockly_Debuggee.actions.breakpoint.update(content.breakpoints);\r\n            Blockly_Debuggee.actions[\"runToCursor\"].cursorBreakpoint = content.cursorBreakpoint;\r\n            await eval(\"async function code(){ \"+ content.code +\" };  code();\");\r\n            postMessage({\"type\": \"execution_finished\"});\r\n        } else {\r\n            window.alert(\"The content is undefined.\");\r\n        }\r\n    };\r\n\r\n    async function $id(wait_call, code){\r\n        return code;\r\n    };\r\n\r\n    async function wait(nest, block_id, CurrentSystemEditorId){\r\n        await Blockly_Debuggee.wait(nest, block_id, CurrentSystemEditorId);\r\n    };\r\n\r\n    function isStepOver(){\r\n        return Blockly_Debuggee.state.isState(\"stepOver\");\r\n    };\r\n\r\n\r\n    function isStepParent(){\r\n        return Blockly_Debuggee.state.isState(\"stepParent\");\r\n    };\r\n\r\n    return {\r\n        handler : handler\r\n    };\r\n})();\r\n\r\n\r\ndispatcher.start_debugging = Blockly_Debuggee.actions[\"start_debugging\"].handler;\r\n"],"sourceRoot":""}