{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///../debuggee/init.js","webpack:///../debuggee/actions/watches.js","webpack:///../debuggee/actions/continue.js","webpack:///../debuggee/actions/breakpoints.js","webpack:///../debuggee/actions/steps.js","webpack:///../debuggee/debuggee.js","webpack:///../debuggee/actions/start.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","r","value","n","__esModule","object","property","prototype","hasOwnProperty","p","s","Blockly_Debuggee","actions","state","currNest","currId","promptMsg","undefined","stepWait","currState","stepIn","stepOver","stepParent","stepOut","continue","isState","this","setState","new_state","wait","next_message","ms","Promise","resolve","setTimeout","async","nest","block_id","CurrentSystemEditorId","id","postMessage","type","data","highlightBlock","hasBreakpoint","breakpoint","includes","cursorBreakpoint","updateDebugger","window","alert","msg","prompt","tmp","dispatcher","_init_js__WEBPACK_IMPORTED_MODULE_0__","watches","handler","new_watches","length","evalLocal","code","variable","update","updated","console","log","update_values","getWatches","variables","new_vars","getVariables","define_variables","expr","watch","eval","init","breakpoints","br","runToCursor","onmessage","obj","start_debugging","content","def_variables_code","variablesWatches_code","$id","wait_call","isStepOver","isStepParent"],"mappings":"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","file":"debuggee.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n","export var Blockly_Debuggee = {};\r\nBlockly_Debuggee.actions = {};\r\n\r\nBlockly_Debuggee.state = {\r\n  currNest : 0,\r\n  currId : '',\r\n  promptMsg : undefined,\r\n  stepWait : false,\r\n  currState: {\r\n    stepIn : false,\r\n    stepOver : false,\r\n    stepParent : false,\r\n    stepOut : false,\r\n    continue : true\r\n  },\r\n  isState: function(state){\r\n    return this.currState[state];\r\n  },\r\n  setState: function(new_state) {\r\n    this.currState[\"stepIn\"] = false;\r\n    this.currState[\"stepOver\"] = false;\r\n    this.currState[\"stepParent\"] = false;\r\n    this.currState[\"stepOut\"] = false;\r\n    this.currState[\"continue\"] = false;\r\n    this.currState[new_state] = true;\r\n  }\r\n};\r\n\r\n\r\nBlockly_Debuggee.wait = (function(){\r\n  function highlightBlock(id, CurrentSystemEditorId){\r\n    postMessage({\"type\": \"highlightBlock\", \"data\" : {\"id\" : id, \"CurrentSystemEditorId\" : CurrentSystemEditorId}});\r\n  }\r\n\r\n  function sleep(ms) {\r\n    return new Promise(resolve => setTimeout(resolve, ms));\r\n  }\r\n  \r\n  function next_message() { \r\n    return sleep(0); \r\n  }\r\n\r\n  async function wait(nest, block_id, CurrentSystemEditorId){\r\n    highlightBlock(block_id, CurrentSystemEditorId);\r\n    //  console.log(\"nest: \" + nest + \"    currNest: \" + Blockly_Debuggee.state.currNest + \"    State: \" );\r\n    //  console.log( Blockly_Debuggee.state.currState);\r\n\r\n    var hasBreakpoint = Blockly_Debuggee.actions.breakpoint.includes(block_id) || (Blockly_Debuggee.actions[\"runToCursor\"].cursorBreakpoint === block_id);\r\n    \r\n    if(Blockly_Debuggee.state.isState(\"continue\") && !hasBreakpoint){ \r\n      Blockly_Debuggee.state.currNest = nest;   \r\n      return;\r\n    }\r\n    if(Blockly_Debuggee.state.currNest == -1 && !hasBreakpoint) return;    // stepOver + stepOut for functions                   \r\n      if(Blockly_Debuggee.state.isState(\"stepIn\") || hasBreakpoint || nest <= Blockly_Debuggee.state.currNest){\r\n        if(Blockly_Debuggee.state.currId  === block_id && !hasBreakpoint) return;\r\n        if(Blockly_Debuggee.state.isState(\"stepParent\") && nest == Blockly_Debuggee.state.currNest && !hasBreakpoint) return;\r\n\r\n        // Send the array with vars values \r\n        Blockly_Debuggee.actions[\"variables\"].updateDebugger();\r\n        Blockly_Debuggee.actions[\"watch\"].updateDebugger();\r\n\r\n        while(!Blockly_Debuggee.state.stepWait){\r\n            await next_message();\r\n        }\r\n        Blockly_Debuggee.state.stepWait = false;\r\n        Blockly_Debuggee.state.currId = block_id;\r\n        if(Blockly_Debuggee.state.isState(\"stepOut\")){\r\n            Blockly_Debuggee.state.currNest = -1;\r\n            Blockly_Debuggee.state.currState.stepOut = false;                                  \r\n        }else{\r\n            Blockly_Debuggee.state.currNest = nest;\r\n        }       \r\n    }\r\n  };\r\n  return wait;  \r\n})();\r\n\r\n\r\nexport var window = {\r\n  alert : function(msg) {\r\n    // Blockly_Debuggee.actions[\"variables\"].updateDebugger();     // gia na fainontai swsta kata to alert ta value pisw ston pinaka --- to kanei meta to alert \r\n    postMessage({\"type\": \"alert\", \"data\" : msg});\r\n  },\r\n  prompt : async function (msg){\r\n    // Blockly_Debuggee.actions[\"variables\"].updateDebugger();     // gia na fainontai swsta kata to prompt ta value pisw ston pinaka --- to kanei mete \r\n    postMessage({\"type\": \"prompt\", \"data\" : msg});\r\n    while(Blockly_Debuggee.state.promptMsg == undefined){\r\n      await (function(){return new Promise(resolve => setTimeout(resolve, 0));})();         // next_message();\r\n    }\r\n    var tmp = Blockly_Debuggee.state.promptMsg;\r\n    Blockly_Debuggee.state.promptMsg = undefined;\r\n    return tmp;\r\n  }\r\n} ;  \r\n\r\n\r\nexport var dispatcher = {\r\n  prompt : (promptMsg) => {\r\n    Blockly_Debuggee.state.promptMsg = promptMsg;\r\n  }\r\n};\r\n\r\n\r\n\r\n\r\n","import {Blockly_Debuggee, dispatcher} from '../init.js';\r\n\r\nBlockly_Debuggee.actions[\"watch\"] = {};\r\nBlockly_Debuggee.actions[\"variables\"] = {};\r\nBlockly_Debuggee.actions[\"eval\"] = {};\r\n\r\n\r\nBlockly_Debuggee.actions[\"watch\"] = (function(){\r\n    var watches = [];\r\n    function handler(new_watches){\r\n        watches = new_watches;\r\n        for(var i=0; i<watches.length; ++i){\r\n            Blockly_Debuggee.actions[\"eval\"].evalLocal(\"var watches = Blockly_Debuggee.actions[\\\"watch\\\"].getWatches();\" + 'watches[' + i + '].value = ' + watches[i].code + ';\\n');\r\n        }\r\n        updateDebugger();\r\n    };\r\n\r\n    function includes(variable){\r\n        return watches.includes(variable);\r\n    };\r\n    \r\n    function update(updated){            \r\n        watches = updated;\r\n        console.log( \"Update (debuggee):\");\r\n        console.log(watches);\r\n    };\r\n\r\n\r\n    function update_values(){\r\n        var code = '';\r\n        for(var i=0; i<watches.length; ++i){\r\n            code += 'watches[' + i + '].value = ' + watches[i].code + ';\\n';\r\n        }\r\n        return \"var watches = Blockly_Debuggee.actions[\\\"watch\\\"].getWatches();\" + code;\r\n    }\r\n    \r\n    function getWatches(){\r\n        return watches;\r\n    }\r\n    \r\n    function updateDebugger(){\r\n        postMessage({\"type\": \"watches\", \"data\" : watches});\r\n    }\r\n\r\n\r\n    return {\r\n        handler : handler,\r\n        includes: includes,\r\n        update : update,\r\n        update_values : update_values,\r\n        getWatches : getWatches,\r\n        updateDebugger : updateDebugger\r\n    };\r\n\r\n})();\r\n\r\n\r\nBlockly_Debuggee.actions[\"variables\"] = (function(){\r\n    var variables = [];\r\n    function update(new_vars){\r\n        variables = new_vars;\r\n    };\r\n\r\n\r\n    function update_values(){\r\n        var code = '';\r\n        for(var i=0; i<variables.length; ++i){\r\n            code += 'variables[' + i + '].value = ' + variables[i].name + ';\\n';\r\n        }\r\n        return code;\r\n    }\r\n    \r\n    function getVariables(){\r\n        return variables;\r\n    }\r\n    \r\n    function updateDebugger(){\r\n        postMessage({\"type\": \"variables\", \"data\" : variables});\r\n    }\r\n\r\n    function define_variables(){\r\n        var code = '';\r\n        for(var i=0; i<variables.length; ++i){\r\n            code += 'var ' + variables[i].name + ';\\n';\r\n        }\r\n        return code;\r\n    }\r\n\r\n    return {\r\n        update : update,\r\n        update_values : update_values,\r\n        getVariables : getVariables,\r\n        updateDebugger : updateDebugger,\r\n        define_variables : define_variables\r\n    }\r\n})();\r\n\r\n\r\nBlockly_Debuggee.actions[\"eval\"].evalLocal;\r\n\r\nBlockly_Debuggee.actions[\"eval\"].handler = function (expr){\r\n    Blockly_Debuggee.actions[\"eval\"].evalLocal(expr);\r\n    Blockly_Debuggee.actions[\"eval\"].evalLocal(Blockly_Debuggee.actions[\"variables\"].update_values());\r\n    Blockly_Debuggee.actions[\"variables\"].updateDebugger();\r\n    Blockly_Debuggee.actions[\"eval\"].evalLocal(Blockly_Debuggee.actions[\"watch\"].update_values());\r\n    Blockly_Debuggee.actions[\"watch\"].updateDebugger();   \r\n}\r\n\r\n\r\ndispatcher.watch = Blockly_Debuggee.actions[\"watch\"].handler;\r\ndispatcher.eval = Blockly_Debuggee.actions[\"eval\"].handler;","import {Blockly_Debuggee, dispatcher} from '../init.js';\r\n\r\nBlockly_Debuggee.actions.continue = {};\r\n\r\nBlockly_Debuggee.actions.continue.handler = () => {\r\n  Blockly_Debuggee.state.stepWait = true;\r\n  Blockly_Debuggee.state.setState(\"continue\");\r\n};\r\n\r\ndispatcher.continue = Blockly_Debuggee.actions[\"continue\"].handler;","import {Blockly_Debuggee, dispatcher} from '../init.js';\r\n\r\nBlockly_Debuggee.actions[\"breakpoint\"] = {};\r\n\r\nBlockly_Debuggee.actions[\"breakpoint\"] = (function(){\r\n    var breakpoints = [];\r\n    function handler(br){\r\n        breakpoints = br;\r\n    };\r\n\r\n    function includes(block_id){\r\n        return breakpoints.includes(block_id);\r\n    };\r\n    \r\n    function update(updated){\r\n        breakpoints = updated;\r\n    };\r\n\r\n    return {\r\n        handler : handler,\r\n        includes: includes,\r\n        update : update\r\n    };\r\n\r\n})();\r\n\r\n\r\nBlockly_Debuggee.actions[\"runToCursor\"] = (function(){\r\n    var cursorBreakpoint = \"\";\r\n    function handler(block_id){\r\n        Blockly_Debuggee.actions[\"runToCursor\"].cursorBreakpoint = block_id;\r\n        Blockly_Debuggee.state.stepWait = true;\r\n        //console.log(\"cursorBreakpoint:   \" + this.cursorBreakpoint);\r\n    }\r\n\r\n    return {\r\n        cursorBreakpoint : cursorBreakpoint,\r\n        handler : handler\r\n    }\r\n})();\r\n\r\n\r\n\r\ndispatcher.breakpoint = Blockly_Debuggee.actions[\"breakpoint\"].handler;\r\ndispatcher.runToCursor = Blockly_Debuggee.actions[\"runToCursor\"].handler;\r\n","import {Blockly_Debuggee, dispatcher} from '../init.js';\r\n\r\nBlockly_Debuggee.actions.stepIn = {};\r\nBlockly_Debuggee.actions.stepOver = {};\r\nBlockly_Debuggee.actions.stepOut = {};\r\nBlockly_Debuggee.actions.stepParent = {};\r\n\r\nBlockly_Debuggee.actions.stepIn.handler = () => {\r\n    Blockly_Debuggee.state.stepWait = true;\r\n    Blockly_Debuggee.state.setState(\"stepIn\");\r\n};\r\n\r\nBlockly_Debuggee.actions.stepOver.handler = () => {\r\n  Blockly_Debuggee.state.stepWait = true;\r\n  Blockly_Debuggee.state.setState(\"stepOver\");\r\n};\r\n\r\nBlockly_Debuggee.actions.stepOut.handler = () => {\r\n  Blockly_Debuggee.state.stepWait = true;\r\n  Blockly_Debuggee.state.setState(\"stepOut\");\r\n};\r\n\r\nBlockly_Debuggee.actions.stepParent.handler = () => {\r\n  Blockly_Debuggee.state.stepWait = true;\r\n  Blockly_Debuggee.state.setState(\"stepParent\");\r\n};\r\n\r\ndispatcher.stepIn = Blockly_Debuggee.actions[\"stepIn\"].handler;\r\ndispatcher.stepOver = Blockly_Debuggee.actions[\"stepOver\"].handler;\r\ndispatcher.stepOut = Blockly_Debuggee.actions[\"stepOut\"].handler;\r\ndispatcher.stepParent = Blockly_Debuggee.actions[\"stepParent\"].handler;","import \"./init.js\";\r\nimport {dispatcher} from \"./init.js\";\r\nimport './actions/actions.js';\r\n\r\nonmessage = function (msg) {\r\n    let obj = msg.data;\r\n    dispatcher[obj.type](obj.data);\r\n}","import '../init.js';\r\nimport './watches.js'\r\nimport {dispatcher} from '../init.js';\r\nvar Blockly_Debuggee = require(\"../init.js\").Blockly_Debuggee;\r\nvar window = require(\"../init.js\").window;\r\n//var evalLocal;\r\n\r\nfunction update_values(){\r\n    var update_var = Blockly_Debuggee.actions[\"variables\"].update_values();\r\n    var update_watch = Blockly_Debuggee.actions[\"watch\"].update_values();\r\n    return update_var + update_watch;\r\n}\r\n\r\nBlockly_Debuggee.actions.start_debugging = (function (){\r\n    async function handler(content){\r\n        if(content!=undefined){        \r\n            Blockly_Debuggee.actions[\"breakpoint\"].update(content.breakpoints);\r\n            Blockly_Debuggee.actions[\"runToCursor\"].cursorBreakpoint = content.cursorBreakpoint;\r\n            Blockly_Debuggee.actions[\"watch\"].update(content.watches);\r\n            Blockly_Debuggee.actions[\"variables\"].update(content.variables);\r\n            var variables = Blockly_Debuggee.actions[\"variables\"].getVariables();\r\n            var watches = Blockly_Debuggee.actions[\"watch\"].getWatches();\r\n            var def_variables_code = Blockly_Debuggee.actions[\"variables\"].define_variables();\r\n            var variablesWatches_code = \"eval(update_values()); Blockly_Debuggee.actions[\\\"variables\\\"].updateDebugger(); Blockly_Debuggee.actions[\\\"watch\\\"].updateDebugger();\";        \r\n            await eval(def_variables_code + \" function evalLocal(expr){eval(expr);} Blockly_Debuggee.actions[\\\"eval\\\"].evalLocal = evalLocal;\" + \"async function code(){ \" + content.code + variablesWatches_code + \"}; code(); \");\r\n\r\n            postMessage({\"type\": \"execution_finished\"});\r\n        } else {\r\n            window.alert(\"The content is undefined.\");\r\n        }\r\n    };\r\n\r\n    async function $id(update_values, wait_call, code){\r\n        return code;\r\n    };\r\n\r\n    async function wait(nest, block_id, CurrentSystemEditorId){\r\n        //evalLocal(\"window.alert(n + \\\"!!!!!\\\");\");\r\n        await Blockly_Debuggee.wait(nest, block_id, CurrentSystemEditorId);\r\n    };\r\n\r\n    function isStepOver(){\r\n        return Blockly_Debuggee.state.isState(\"stepOver\");\r\n    };\r\n\r\n\r\n    function isStepParent(){\r\n        return Blockly_Debuggee.state.isState(\"stepParent\");\r\n    };\r\n\r\n    return {\r\n        handler : handler\r\n    };\r\n})();\r\n\r\n\r\ndispatcher.start_debugging = Blockly_Debuggee.actions[\"start_debugging\"].handler;\r\n\r\n\r\n"],"sourceRoot":""}