{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///../debuggee/init.js","webpack:///../debuggee/actions/watches.js","webpack:///../debuggee/actions/continue.js","webpack:///../debuggee/actions/breakpoints.js","webpack:///../debuggee/actions/steps.js","webpack:///../debuggee/debuggee.js","webpack:///../debuggee/actions/start.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","r","value","n","__esModule","object","property","prototype","hasOwnProperty","p","s","Blockly_Debuggee","actions","state","currNest","currId","promptMsg","undefined","alertFlag","stepWait","currState","stepIn","stepOver","stepParent","stepOut","continue","isState","this","setState","new_state","wait","next_message","ms","Promise","resolve","setTimeout","async","nest","block_id","CurrentSystemEditorId","id","postMessage","type","data","highlightBlock","hasBreakpoint","breakpoint","includes_enable","cursorBreakpoint","updateDebugger","wait_view","reset_view","window","alert","msg","prompt","tmp","dispatcher","_init_js__WEBPACK_IMPORTED_MODULE_0__","watches","handler","new_watches","length","evalLocal","code","includes","variable","update","updated","update_values","getWatches","variables","new_vars","getVariables","define_variables","expr","watch","eval","init","breakpoints","map","obj","enable","br","runToCursor","onmessage","start_debugging","content","def_variables_code","variablesWatches_code","$id","wait_call","isStepOver","isStepParent"],"mappings":"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","file":"debuggee.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n","export var Blockly_Debuggee = {};\r\nBlockly_Debuggee.actions = {};\r\n\r\nBlockly_Debuggee.state = {\r\n  currNest : 0,\r\n  currId : '',\r\n  promptMsg : undefined,\r\n  alertFlag : false,\r\n  stepWait : false,\r\n  currState: {\r\n    stepIn : false,\r\n    stepOver : false,\r\n    stepParent : false,\r\n    stepOut : false,\r\n    continue : true\r\n  },\r\n  isState: function(state){\r\n    return this.currState[state];\r\n  },\r\n  setState: function(new_state) {\r\n    this.currState[\"stepIn\"] = false;\r\n    this.currState[\"stepOver\"] = false;\r\n    this.currState[\"stepParent\"] = false;\r\n    this.currState[\"stepOut\"] = false;\r\n    this.currState[\"continue\"] = false;\r\n    this.currState[new_state] = true;\r\n  }\r\n};\r\n\r\n\r\nBlockly_Debuggee.wait = (function(){\r\n  function highlightBlock(id, CurrentSystemEditorId){\r\n    postMessage({\"type\": \"highlightBlock\", \"data\" : {\"id\" : id, \"CurrentSystemEditorId\" : CurrentSystemEditorId}});\r\n  }\r\n\r\n  function sleep(ms) {\r\n    return new Promise(resolve => setTimeout(resolve, ms));\r\n  }\r\n  \r\n  function next_message() { \r\n    return sleep(0); \r\n  }\r\n\r\n  async function wait(nest, block_id, CurrentSystemEditorId){\r\n    highlightBlock(block_id, CurrentSystemEditorId);\r\n\r\n    var hasBreakpoint = Blockly_Debuggee.actions.breakpoint.includes_enable(block_id) || (Blockly_Debuggee.actions[\"runToCursor\"].cursorBreakpoint === block_id);\r\n    \r\n    if(Blockly_Debuggee.state.isState(\"continue\") && !hasBreakpoint){ \r\n      Blockly_Debuggee.state.currNest = nest;   \r\n      return;\r\n    }\r\n    if(Blockly_Debuggee.state.currNest == -1 && !hasBreakpoint) return;    // stepOver + stepOut for functions                   \r\n      if(Blockly_Debuggee.state.isState(\"stepIn\") || hasBreakpoint || nest <= Blockly_Debuggee.state.currNest){\r\n        if(Blockly_Debuggee.state.currId  === block_id && !hasBreakpoint) return;\r\n        if(Blockly_Debuggee.state.isState(\"stepParent\") && nest == Blockly_Debuggee.state.currNest && !hasBreakpoint) return;\r\n\r\n        // Send the array with vars values \r\n        Blockly_Debuggee.actions[\"variables\"].updateDebugger();\r\n        Blockly_Debuggee.actions[\"watch\"].updateDebugger();\r\n        Blockly_Debuggee.actions[\"breakpoint\"].wait_view(block_id);\r\n\r\n        while(!Blockly_Debuggee.state.stepWait){\r\n            await next_message();\r\n        }\r\n        Blockly_Debuggee.actions[\"breakpoint\"].reset_view(block_id);\r\n        \r\n        Blockly_Debuggee.state.stepWait = false;\r\n        Blockly_Debuggee.state.currId = block_id;\r\n        if(Blockly_Debuggee.state.isState(\"stepOut\")){\r\n            Blockly_Debuggee.state.currNest = -1;\r\n            Blockly_Debuggee.state.currState.stepOut = false;                                  \r\n        }else{\r\n            Blockly_Debuggee.state.currNest = nest;\r\n        }       \r\n    }\r\n  };\r\n  return wait;  \r\n})();\r\n\r\n\r\nexport var window = {\r\n  alert : async function(msg) {\r\n    Blockly_Debuggee.actions[\"variables\"].updateDebugger();     // gia na fainontai swsta kata to alert ta value pisw ston pinaka\r\n    Blockly_Debuggee.actions[\"watch\"].updateDebugger();\r\n    setTimeout(function(){ postMessage({\"type\": \"alert\", \"data\" : msg}); },50);\r\n    while(!Blockly_Debuggee.state.alertFlag){\r\n      await (function(){return new Promise(resolve => setTimeout(resolve, 0));})();         // next_message();\r\n    }\r\n    Blockly_Debuggee.state.alertFlag = false;\r\n\r\n    \r\n  },\r\n  prompt : async function (msg){\r\n    Blockly_Debuggee.actions[\"variables\"].updateDebugger();     // gia na fainontai swsta kata to prompt ta value pisw ston pinaka\r\n    Blockly_Debuggee.actions[\"watch\"].updateDebugger();\r\n    setTimeout(function(){ postMessage({\"type\": \"prompt\", \"data\" : msg}); },50);\r\n    while(Blockly_Debuggee.state.promptMsg == undefined){\r\n      await (function(){return new Promise(resolve => setTimeout(resolve, 0));})();         // next_message();\r\n    }\r\n    var tmp = Blockly_Debuggee.state.promptMsg;\r\n    Blockly_Debuggee.state.promptMsg = undefined;\r\n    return tmp;\r\n  }\r\n} ;  \r\n\r\n\r\nexport var dispatcher = {\r\n  prompt : (promptMsg) => {\r\n    Blockly_Debuggee.state.promptMsg = promptMsg;\r\n  },\r\n  alert : () => {\r\n    Blockly_Debuggee.state.alertFlag = true;\r\n  }\r\n};\r\n\r\n\r\n\r\n","import {Blockly_Debuggee, dispatcher} from '../init.js';\r\n\r\nBlockly_Debuggee.actions[\"watch\"] = {};\r\nBlockly_Debuggee.actions[\"variables\"] = {};\r\nBlockly_Debuggee.actions[\"eval\"] = {};\r\n\r\n\r\nBlockly_Debuggee.actions[\"watch\"] = (function(){\r\n    var watches = [];\r\n    function handler(new_watches){\r\n        watches = new_watches;\r\n        for(var i=0; i<watches.length; ++i){\r\n            Blockly_Debuggee.actions[\"eval\"].evalLocal(\"var watches = Blockly_Debuggee.actions[\\\"watch\\\"].getWatches();\" + 'watches[' + i + '].value = ' + watches[i].code + ';\\n');\r\n        }\r\n        updateDebugger();\r\n    };\r\n\r\n    function includes(variable){\r\n        return watches.includes(variable);\r\n    };\r\n    \r\n    function update(updated){            \r\n        watches = updated;\r\n    };\r\n\r\n\r\n    function update_values(){\r\n        var code = '';\r\n        for(var i=0; i<watches.length; ++i){\r\n            code += 'watches[' + i + '].value = ' + watches[i].code + ';\\n';\r\n        }\r\n        return \"var watches = Blockly_Debuggee.actions[\\\"watch\\\"].getWatches();\" + code;\r\n    }\r\n    \r\n    function getWatches(){\r\n        return watches;\r\n    }\r\n    \r\n    function updateDebugger(){\r\n        postMessage({\"type\": \"watches\", \"data\" : watches});\r\n    }\r\n\r\n\r\n    return {\r\n        handler : handler,\r\n        includes: includes,\r\n        update : update,\r\n        update_values : update_values,\r\n        getWatches : getWatches,\r\n        updateDebugger : updateDebugger\r\n    };\r\n\r\n})();\r\n\r\n\r\nBlockly_Debuggee.actions[\"variables\"] = (function(){\r\n    var variables = [];\r\n    function update(new_vars){\r\n        variables = new_vars;\r\n    };\r\n\r\n\r\n    function update_values(){\r\n        var code = '';\r\n        for(var i=0; i<variables.length; ++i){\r\n            code += 'variables[' + i + '].value = ' + variables[i].name + ';\\n';\r\n        }\r\n        return code;\r\n    }\r\n    \r\n    function getVariables(){\r\n        return variables;\r\n    }\r\n    \r\n    function updateDebugger(){\r\n        postMessage({\"type\": \"variables\", \"data\" : variables});\r\n    }\r\n\r\n    function define_variables(){\r\n        var code = '';\r\n        for(var i=0; i<variables.length; ++i){\r\n            code += 'var ' + variables[i].name + ';\\n';\r\n        }\r\n        return code;\r\n    }\r\n\r\n    return {\r\n        update : update,\r\n        update_values : update_values,\r\n        getVariables : getVariables,\r\n        updateDebugger : updateDebugger,\r\n        define_variables : define_variables\r\n    }\r\n})();\r\n\r\n\r\nBlockly_Debuggee.actions[\"eval\"].evalLocal;\r\n\r\nBlockly_Debuggee.actions[\"eval\"].handler = function (expr){\r\n    Blockly_Debuggee.actions[\"eval\"].evalLocal(expr);\r\n    Blockly_Debuggee.actions[\"eval\"].evalLocal(Blockly_Debuggee.actions[\"variables\"].update_values());\r\n    Blockly_Debuggee.actions[\"variables\"].updateDebugger();\r\n    Blockly_Debuggee.actions[\"eval\"].evalLocal(Blockly_Debuggee.actions[\"watch\"].update_values());\r\n    Blockly_Debuggee.actions[\"watch\"].updateDebugger();   \r\n}\r\n\r\n\r\ndispatcher.watch = Blockly_Debuggee.actions[\"watch\"].handler;\r\ndispatcher.eval = Blockly_Debuggee.actions[\"eval\"].handler;","import {Blockly_Debuggee, dispatcher} from '../init.js';\r\n\r\nBlockly_Debuggee.actions.continue = {};\r\n\r\nBlockly_Debuggee.actions.continue.handler = () => {\r\n  Blockly_Debuggee.state.stepWait = true;\r\n  Blockly_Debuggee.state.setState(\"continue\");\r\n};\r\n\r\ndispatcher.continue = Blockly_Debuggee.actions[\"continue\"].handler;","import {Blockly_Debuggee, dispatcher} from '../init.js';\r\n\r\nBlockly_Debuggee.actions[\"breakpoint\"] = {};\r\n\r\nBlockly_Debuggee.actions[\"breakpoint\"] = (function(){\r\n    var breakpoints = [];\r\n    function handler(br){\r\n        breakpoints = br;\r\n    };\r\n\r\n    function includes_enable(block_id){\r\n        // check also if the breakpoint is enable\r\n        return breakpoints.map((obj)=>{if(obj.enable) return obj.block_id}).includes(block_id);\r\n    };\r\n    \r\n    function update(updated){\r\n        breakpoints = updated;\r\n    };\r\n\r\n    function wait_view(block_id){\r\n        if(includes_enable(block_id))\r\n            postMessage({\"type\": \"breakpoint_wait_view\", \"data\" : block_id});\r\n    }\r\n\r\n    function reset_view(block_id){\r\n        if(includes_enable(block_id))\r\n            postMessage({\"type\": \"breakpoint_reset_view\", \"data\" : block_id});\r\n    }\r\n\r\n    return {\r\n        handler : handler,\r\n        includes_enable: includes_enable,\r\n        update : update,\r\n        wait_view : wait_view,\r\n        reset_view : reset_view\r\n    };\r\n\r\n})();\r\n\r\n\r\nBlockly_Debuggee.actions[\"runToCursor\"] = (function(){\r\n    var cursorBreakpoint = \"\";\r\n    function handler(block_id){\r\n        Blockly_Debuggee.actions[\"runToCursor\"].cursorBreakpoint = block_id;\r\n        Blockly_Debuggee.state.stepWait = true;\r\n    }\r\n\r\n    return {\r\n        cursorBreakpoint : cursorBreakpoint,\r\n        handler : handler\r\n    }\r\n})();\r\n\r\n\r\n\r\ndispatcher.breakpoint = Blockly_Debuggee.actions[\"breakpoint\"].handler;\r\ndispatcher.runToCursor = Blockly_Debuggee.actions[\"runToCursor\"].handler;\r\n","import {Blockly_Debuggee, dispatcher} from '../init.js';\r\n\r\nBlockly_Debuggee.actions.stepIn = {};\r\nBlockly_Debuggee.actions.stepOver = {};\r\nBlockly_Debuggee.actions.stepOut = {};\r\nBlockly_Debuggee.actions.stepParent = {};\r\n\r\nBlockly_Debuggee.actions.stepIn.handler = () => {\r\n    Blockly_Debuggee.state.stepWait = true;\r\n    Blockly_Debuggee.state.setState(\"stepIn\");\r\n};\r\n\r\nBlockly_Debuggee.actions.stepOver.handler = () => {\r\n  Blockly_Debuggee.state.stepWait = true;\r\n  Blockly_Debuggee.state.setState(\"stepOver\");\r\n};\r\n\r\nBlockly_Debuggee.actions.stepOut.handler = () => {\r\n  Blockly_Debuggee.state.stepWait = true;\r\n  Blockly_Debuggee.state.setState(\"stepOut\");\r\n};\r\n\r\nBlockly_Debuggee.actions.stepParent.handler = () => {\r\n  Blockly_Debuggee.state.stepWait = true;\r\n  Blockly_Debuggee.state.setState(\"stepParent\");\r\n};\r\n\r\ndispatcher.stepIn = Blockly_Debuggee.actions[\"stepIn\"].handler;\r\ndispatcher.stepOver = Blockly_Debuggee.actions[\"stepOver\"].handler;\r\ndispatcher.stepOut = Blockly_Debuggee.actions[\"stepOut\"].handler;\r\ndispatcher.stepParent = Blockly_Debuggee.actions[\"stepParent\"].handler;","import \"./init.js\";\r\nimport {dispatcher} from \"./init.js\";\r\nimport './actions/actions.js';\r\n\r\nonmessage = function (msg) {\r\n    let obj = msg.data;\r\n    dispatcher[obj.type](obj.data);\r\n}","import '../init.js';\r\nimport './watches.js'\r\nimport {dispatcher} from '../init.js';\r\nvar Blockly_Debuggee = require(\"../init.js\").Blockly_Debuggee;\r\nvar window = require(\"../init.js\").window;\r\n\r\nfunction update_values(){\r\n    var update_var = Blockly_Debuggee.actions[\"variables\"].update_values();\r\n    var update_watch = Blockly_Debuggee.actions[\"watch\"].update_values();\r\n    return update_var + update_watch;\r\n}\r\n\r\nBlockly_Debuggee.actions.start_debugging = (function (){\r\n    async function handler(content){\r\n        if(content!=undefined){        \r\n            Blockly_Debuggee.actions[\"breakpoint\"].update(content.breakpoints);\r\n            Blockly_Debuggee.actions[\"runToCursor\"].cursorBreakpoint = content.cursorBreakpoint;\r\n            Blockly_Debuggee.actions[\"watch\"].update(content.watches);\r\n            Blockly_Debuggee.actions[\"variables\"].update(content.variables);\r\n            var variables = Blockly_Debuggee.actions[\"variables\"].getVariables();\r\n            var watches = Blockly_Debuggee.actions[\"watch\"].getWatches();\r\n            var def_variables_code = Blockly_Debuggee.actions[\"variables\"].define_variables();\r\n            var variablesWatches_code = \"eval(update_values()); Blockly_Debuggee.actions[\\\"variables\\\"].updateDebugger(); Blockly_Debuggee.actions[\\\"watch\\\"].updateDebugger();\";        \r\n            await eval(def_variables_code + \" function evalLocal(expr){eval(expr);} Blockly_Debuggee.actions[\\\"eval\\\"].evalLocal = evalLocal;\" + \"async function code(){ \" + content.code + variablesWatches_code + \"}; code(); \");\r\n\r\n            postMessage({\"type\": \"execution_finished\"});\r\n        } else {\r\n            window.alert(\"The content is undefined.\");\r\n        }\r\n    };\r\n\r\n    async function $id(update_values, wait_call, code){\r\n        return code;\r\n    };\r\n\r\n    async function wait(nest, block_id, CurrentSystemEditorId){\r\n        await Blockly_Debuggee.wait(nest, block_id, CurrentSystemEditorId);\r\n    };\r\n\r\n    function isStepOver(){\r\n        return Blockly_Debuggee.state.isState(\"stepOver\");\r\n    };\r\n\r\n\r\n    function isStepParent(){\r\n        return Blockly_Debuggee.state.isState(\"stepParent\");\r\n    };\r\n\r\n    return {\r\n        handler : handler\r\n    };\r\n})();\r\n\r\n\r\ndispatcher.start_debugging = Blockly_Debuggee.actions[\"start_debugging\"].handler;\r\n\r\n\r\n"],"sourceRoot":""}