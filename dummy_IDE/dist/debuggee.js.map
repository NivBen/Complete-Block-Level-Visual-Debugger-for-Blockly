{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///../debuggee/init.js","webpack:///../debuggee/actions/watches.js","webpack:///../debuggee/actions/continue.js","webpack:///../debuggee/actions/breakpoints.js","webpack:///../debuggee/actions/steps.js","webpack:///../debuggee/debuggee.js","webpack:///../debuggee/actions/start.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","r","value","n","__esModule","object","property","prototype","hasOwnProperty","p","s","Blockly_Debuggee","actions","state","currNest","currId","promptMsg","undefined","stepWait","currState","stepIn","stepOver","stepParent","stepOut","continue","isState","this","setState","new_state","wait","next_message","ms","Promise","resolve","setTimeout","async","nest","block_id","CurrentSystemEditorId","id","postMessage","type","data","highlightBlock","hasBreakpoint","breakpoint","includes","cursorBreakpoint","window","alert","msg","prompt","tmp","dispatcher","_init_js__WEBPACK_IMPORTED_MODULE_0__","watches","handler","new_watches","variable","update","updated","update_values","code","length","variables","count","new_vars","console","log","getVariables","watch","init","breakpoints","br","runToCursor","onmessage","obj","start_debugging","content","eval","$id","wait_call","isStepOver","isStepParent"],"mappings":"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","file":"debuggee.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n","export var Blockly_Debuggee = {};\r\nBlockly_Debuggee.actions = {};\r\n\r\nBlockly_Debuggee.state = {\r\n  currNest : 0,\r\n  currId : '',\r\n  promptMsg : undefined,\r\n  stepWait : false,\r\n  currState: {\r\n    stepIn : false,\r\n    stepOver : false,\r\n    stepParent : false,\r\n    stepOut : false,\r\n    continue : true\r\n  },\r\n  isState: function(state){\r\n    return this.currState[state];\r\n  },\r\n  setState: function(new_state) {\r\n    this.currState[\"stepIn\"] = false;\r\n    this.currState[\"stepOver\"] = false;\r\n    this.currState[\"stepParent\"] = false;\r\n    this.currState[\"stepOut\"] = false;\r\n    this.currState[\"continue\"] = false;\r\n    this.currState[new_state] = true;\r\n  }\r\n};\r\n\r\n\r\nBlockly_Debuggee.wait = (function(){\r\n  function highlightBlock(id, CurrentSystemEditorId){\r\n    postMessage({\"type\": \"highlightBlock\", \"data\" : {\"id\" : id, \"CurrentSystemEditorId\" : CurrentSystemEditorId}});\r\n  }\r\n\r\n  function sleep(ms) {\r\n    return new Promise(resolve => setTimeout(resolve, ms));\r\n  }\r\n  \r\n  function next_message() { \r\n    return sleep(0); \r\n  }\r\n\r\n  async function wait(nest, block_id, CurrentSystemEditorId){\r\n    highlightBlock(block_id, CurrentSystemEditorId);\r\n    //  console.log(\"nest: \" + nest + \"    currNest: \" + Blockly_Debuggee.state.currNest + \"    State: \" );\r\n    //  console.log( Blockly_Debuggee.state.currState);\r\n    // // call funtion to update watches value\r\n    \r\n    // var code = (Blockly_Debuggee.actions[\"watch\"].update_values());\r\n    // console.log(code);\r\n    // eval(code);\r\n\r\n    var hasBreakpoint = Blockly_Debuggee.actions.breakpoint.includes(block_id) || (Blockly_Debuggee.actions[\"runToCursor\"].cursorBreakpoint === block_id);\r\n    // if(Blockly_Debuggee.actions[\"runToCursor\"].cursorBreakpoint !== \"\" ){\r\n    //   console.log(Blockly_Debuggee.actions[\"runToCursor\"].cursorBreakpoint);\r\n    // }\r\n    if(Blockly_Debuggee.state.isState(\"continue\") && !hasBreakpoint){ \r\n      Blockly_Debuggee.state.currNest = nest;   \r\n      return;\r\n    }\r\n    if(Blockly_Debuggee.state.currNest == -1 && !hasBreakpoint) return;    // stepOver + stepOut for functions                   \r\n      if(Blockly_Debuggee.state.isState(\"stepIn\") || hasBreakpoint || nest <= Blockly_Debuggee.state.currNest){\r\n        if(Blockly_Debuggee.state.currId  === block_id && !hasBreakpoint) return;\r\n        if(Blockly_Debuggee.state.isState(\"stepParent\") && nest == Blockly_Debuggee.state.currNest && !hasBreakpoint) return;\r\n        while(!Blockly_Debuggee.state.stepWait){\r\n            await next_message();\r\n        }\r\n        Blockly_Debuggee.state.stepWait = false;\r\n        Blockly_Debuggee.state.currId = block_id;\r\n        if(Blockly_Debuggee.state.isState(\"stepOut\")){\r\n            Blockly_Debuggee.state.currNest = -1;\r\n            Blockly_Debuggee.state.currState.stepOut = false;                                  \r\n        }else{\r\n            Blockly_Debuggee.state.currNest = nest;\r\n        }       \r\n    }\r\n  };\r\n\r\n  return wait;  \r\n})();\r\n\r\n\r\nexport var window = {\r\n  alert : function(msg) {\r\n    postMessage({\"type\": \"alert\", \"data\" : msg});\r\n  },\r\n  prompt : async function (msg){\r\n    postMessage({\"type\": \"prompt\", \"data\" : msg});\r\n    while(Blockly_Debuggee.state.promptMsg == undefined){\r\n      await (function(){return new Promise(resolve => setTimeout(resolve, 0));})();         // next_message();\r\n    }\r\n    var tmp = Blockly_Debuggee.state.promptMsg;\r\n    Blockly_Debuggee.state.promptMsg = undefined;\r\n    return tmp;\r\n  }\r\n} ;  \r\n\r\n\r\nexport var dispatcher = {\r\n  prompt : (promptMsg) => {\r\n    Blockly_Debuggee.state.promptMsg = promptMsg;\r\n  }\r\n};\r\n\r\n\r\n\r\n\r\n","import {Blockly_Debuggee, dispatcher} from '../init.js';\r\n\r\nBlockly_Debuggee.actions[\"watch\"] = {};\r\nBlockly_Debuggee.actions[\"variables\"] = {};\r\n\r\n\r\nBlockly_Debuggee.actions[\"watch\"] = (function(){\r\n    var watches = [];\r\n    function handler(new_watches){\r\n        watches = new_watches;\r\n        // console.log(\"handler: \" + watches);\r\n    };\r\n\r\n    function includes(variable){\r\n        return watches.includes(variable);\r\n    };\r\n    \r\n    function update(updated){\r\n        watches = updated;\r\n        // console.log( \"Update:  \" + watches);\r\n    };\r\n\r\n    function update_values(){\r\n        var code = '';\r\n        for(var i=0; i<watches.length; ++i){\r\n          //  code += 'watches['+ i + '] = ' +  watches[i] + ';\\n';   // prepei na diaxwrisw value me var name (sto 1o thelw value sto 2 thelw var name)\r\n          code += 'console.log(' + watches[i] +');'\r\n        }\r\n        return code;\r\n        // console.log(code);\r\n        // eval(code);\r\n    }\r\n\r\n    return {\r\n        handler : handler,\r\n        includes: includes,\r\n        update : update,\r\n        update_values : update_values,\r\n        watches : watches\r\n    };\r\n\r\n})();\r\n\r\n\r\nBlockly_Debuggee.actions[\"variables\"] = (function(){\r\n    var variables = [];\r\n    function update(new_vars){\r\n        variables = new_vars;\r\n        console.log(variables);\r\n    };\r\n\r\n\r\n    var count = 0;\r\n    function update_values(){\r\n        var code = '';\r\n        for(var i=0; i<variables.length; ++i){\r\n           // code += 'var ' + variables[i].name + ';\\n';\r\n            code += 'variables[' + i + '].value = ' + variables[i].name + ';\\n';\r\n            code += 'console.log(' + variables[i].name +');\\n'\r\n        }\r\n        console.log(\"count:  \" + ++count);\r\n        console.log(variables);\r\n\r\n        return code;\r\n    }\r\n    \r\n    function getVariables(){\r\n        return variables;\r\n    }\r\n    \r\n    return {\r\n        update : update,\r\n        update_values : update_values,\r\n        getVariables : getVariables\r\n    }\r\n})();\r\n\r\n\r\ndispatcher.watch = Blockly_Debuggee.actions[\"watch\"].handler;","import {Blockly_Debuggee, dispatcher} from '../init.js';\r\n\r\nBlockly_Debuggee.actions.continue = {};\r\n\r\nBlockly_Debuggee.actions.continue.handler = () => {\r\n  Blockly_Debuggee.state.stepWait = true;\r\n  Blockly_Debuggee.state.setState(\"continue\");\r\n};\r\n\r\ndispatcher.continue = Blockly_Debuggee.actions[\"continue\"].handler;","import {Blockly_Debuggee, dispatcher} from '../init.js';\r\n\r\nBlockly_Debuggee.actions[\"breakpoint\"] = {};\r\n\r\nBlockly_Debuggee.actions[\"breakpoint\"] = (function(){\r\n    var breakpoints = [];\r\n    function handler(br){\r\n        breakpoints = br;\r\n    };\r\n\r\n    function includes(block_id){\r\n        return breakpoints.includes(block_id);\r\n    };\r\n    \r\n    function update(updated){\r\n        breakpoints = updated;\r\n    };\r\n\r\n    return {\r\n        handler : handler,\r\n        includes: includes,\r\n        update : update\r\n    };\r\n\r\n})();\r\n\r\n\r\nBlockly_Debuggee.actions[\"runToCursor\"] = (function(){\r\n    var cursorBreakpoint = \"\";\r\n    function handler(block_id){\r\n        Blockly_Debuggee.actions[\"runToCursor\"].cursorBreakpoint = block_id;\r\n        Blockly_Debuggee.state.stepWait = true;\r\n        //console.log(\"cursorBreakpoint:   \" + this.cursorBreakpoint);\r\n    }\r\n\r\n    return {\r\n        cursorBreakpoint : cursorBreakpoint,\r\n        handler : handler\r\n    }\r\n})();\r\n\r\n\r\n\r\ndispatcher.breakpoint = Blockly_Debuggee.actions[\"breakpoint\"].handler;\r\ndispatcher.runToCursor = Blockly_Debuggee.actions[\"runToCursor\"].handler;\r\n","import {Blockly_Debuggee, dispatcher} from '../init.js';\r\n\r\nBlockly_Debuggee.actions.stepIn = {};\r\nBlockly_Debuggee.actions.stepOver = {};\r\nBlockly_Debuggee.actions.stepOut = {};\r\nBlockly_Debuggee.actions.stepParent = {};\r\n\r\nBlockly_Debuggee.actions.stepIn.handler = () => {\r\n    Blockly_Debuggee.state.stepWait = true;\r\n    Blockly_Debuggee.state.setState(\"stepIn\");\r\n};\r\n\r\nBlockly_Debuggee.actions.stepOver.handler = () => {\r\n  Blockly_Debuggee.state.stepWait = true;\r\n  Blockly_Debuggee.state.setState(\"stepOver\");\r\n};\r\n\r\nBlockly_Debuggee.actions.stepOut.handler = () => {\r\n  Blockly_Debuggee.state.stepWait = true;\r\n  Blockly_Debuggee.state.setState(\"stepOut\");\r\n};\r\n\r\nBlockly_Debuggee.actions.stepParent.handler = () => {\r\n  Blockly_Debuggee.state.stepWait = true;\r\n  Blockly_Debuggee.state.setState(\"stepParent\");\r\n};\r\n\r\ndispatcher.stepIn = Blockly_Debuggee.actions[\"stepIn\"].handler;\r\ndispatcher.stepOver = Blockly_Debuggee.actions[\"stepOver\"].handler;\r\ndispatcher.stepOut = Blockly_Debuggee.actions[\"stepOut\"].handler;\r\ndispatcher.stepParent = Blockly_Debuggee.actions[\"stepParent\"].handler;","import \"./init.js\";\r\nimport {dispatcher} from \"./init.js\";\r\nimport './actions/actions.js';\r\n\r\nonmessage = function (msg) {\r\n    let obj = msg.data;\r\n    dispatcher[obj.type](obj.data);\r\n}","import '../init.js';\r\nimport './watches.js'\r\nimport {dispatcher} from '../init.js';\r\nvar Blockly_Debuggee = require(\"../init.js\").Blockly_Debuggee;\r\nvar window = require(\"../init.js\").window;\r\n\r\nvar watches = Blockly_Debuggee.actions[\"watch\"].watches;\r\n//var update_values = Blockly_Debuggee.actions[\"watch\"].update_values;\r\n//var variables = Blockly_Debuggee.actions[\"variables\"].getVariables();\r\nvar update_values = Blockly_Debuggee.actions[\"variables\"].update_values;\r\n\r\n\r\n\r\nBlockly_Debuggee.actions.start_debugging = (function (){\r\n    async function handler(content){\r\n        if(content!=undefined){        \r\n            Blockly_Debuggee.actions[\"breakpoint\"].update(content.breakpoints);\r\n            Blockly_Debuggee.actions[\"runToCursor\"].cursorBreakpoint = content.cursorBreakpoint;\r\n            Blockly_Debuggee.actions[\"watch\"].update(content.watches);\r\n            Blockly_Debuggee.actions[\"variables\"].update(content.variables);\r\n            var variables = Blockly_Debuggee.actions[\"variables\"].getVariables();\r\n            var count;\r\n            await eval(\"async function code(){ \"+ content.code +\" }; code();\");\r\n            postMessage({\"type\": \"execution_finished\"});\r\n        } else {\r\n            window.alert(\"The content is undefined.\");\r\n        }\r\n    };\r\n\r\n    async function $id(update_values, wait_call, code){\r\n        return code;\r\n    };\r\n\r\n    var count = 0;\r\n    async function wait(nest, block_id, CurrentSystemEditorId){\r\n        await Blockly_Debuggee.wait(nest, block_id, CurrentSystemEditorId);\r\n        console.log(\"countWait:  \"+ ++count);\r\n    };\r\n\r\n    function isStepOver(){\r\n        return Blockly_Debuggee.state.isState(\"stepOver\");\r\n    };\r\n\r\n\r\n    function isStepParent(){\r\n        return Blockly_Debuggee.state.isState(\"stepParent\");\r\n    };\r\n\r\n    return {\r\n        handler : handler\r\n    };\r\n})();\r\n\r\n\r\ndispatcher.start_debugging = Blockly_Debuggee.actions[\"start_debugging\"].handler;\r\n\r\n\r\n"],"sourceRoot":""}