{"map":"{\"version\":3,\"sources\":[\"webpack/bootstrap\",\"C:\\\\Users\\\\Krystallia Savvaki\\\\Desktop\\\\blockly_debugger\\\\debuggee\\\\actions\\\\watches.js\",\"C:\\\\Users\\\\Krystallia Savvaki\\\\Desktop\\\\blockly_debugger\\\\debuggee\\\\actions\\\\continue.js\",\"C:\\\\Users\\\\Krystallia Savvaki\\\\Desktop\\\\blockly_debugger\\\\debuggee\\\\actions\\\\breakpoints.js\",\"C:\\\\Users\\\\Krystallia Savvaki\\\\Desktop\\\\blockly_debugger\\\\debuggee\\\\actions\\\\steps.js\",\"C:\\\\Users\\\\Krystallia Savvaki\\\\Desktop\\\\blockly_debugger\\\\debuggee\\\\debuggee.js\",\"C:\\\\Users\\\\Krystallia Savvaki\\\\Desktop\\\\blockly_debugger\\\\debuggee\\\\actions\\\\start.js\"],\"names\":[\"installedModules\",\"__webpack_require__\",\"moduleId\",\"exports\",\"module\",\"i\",\"l\",\"modules\",\"call\",\"m\",\"c\",\"d\",\"name\",\"getter\",\"o\",\"Object\",\"defineProperty\",\"configurable\",\"enumerable\",\"get\",\"r\",\"value\",\"n\",\"__esModule\",\"object\",\"property\",\"prototype\",\"hasOwnProperty\",\"p\",\"s\",\"_init_js__WEBPACK_IMPORTED_MODULE_0__\",\"actions\",\"watches\",\"updateDebugger\",\"postMessage\",\"type\",\"data\",\"handler\",\"new_watches\",\"length\",\"evalLocal\",\"code\",\"includes\",\"variable\",\"update\",\"updated\",\"update_values\",\"getWatches\",\"variables\",\"new_vars\",\"getVariables\",\"define_variables\",\"expr\",\"watch\",\"eval\",\"init\",\"continue\",\"state\",\"stepWait\",\"setState\",\"breakpoints\",\"includes_enable\",\"block_id\",\"map\",\"obj\",\"enable\",\"br\",\"wait_view\",\"reset_view\",\"cursorBreakpoint\",\"breakpoint\",\"runToCursor\",\"stepIn\",\"stepOver\",\"stepOut\",\"stepParent\",\"onmessage\",\"msg\",\"Blockly_Debuggee\",\"window\",\"start_debugging\",\"async\",\"content\",\"undefined\",\"def_variables_code\",\"variablesWatches_code\",\"alert\",\"$id\",\"wait_call\",\"wait\",\"nest\",\"CurrentSystemEditorId\",\"isStepOver\",\"isState\",\"isStepParent\"],\"mappings\":\"aACA,IAAAA,KAGA,SAAAC,EAAAC,GAGA,GAAAF,EAAAE,GACA,OAAAF,EAAAE,GAAAC,QAGA,IAAAC,EAAAJ,EAAAE,IACAG,EAAAH,EACAI,GAAA,EACAH,YAUA,OANAI,EAAAL,GAAAM,KAAAJ,EAAAD,QAAAC,EAAAA,EAAAD,QAAAF,GAGAG,EAAAE,GAAA,EAGAF,EAAAD,QAKAF,EAAAQ,EAAAF,EAGAN,EAAAS,EAAAV,EAGAC,EAAAU,EAAA,SAAAR,EAAAS,EAAAC,GACAZ,EAAAa,EAAAX,EAAAS,IACAG,OAAAC,eAAAb,EAAAS,GACAK,cAAA,EACAC,YAAA,EACAC,IAAAN,KAMAZ,EAAAmB,EAAA,SAAAjB,GACAY,OAAAC,eAAAb,EAAA,cAAiDkB,OAAA,KAIjDpB,EAAAqB,EAAA,SAAAlB,GACA,IAAAS,EAAAT,GAAAA,EAAAmB,WACA,WAA2B,OAAAnB,EAAA,SAC3B,WAAiC,OAAAA,GAEjC,OADAH,EAAAU,EAAAE,EAAA,IAAAA,GACAA,GAIAZ,EAAAa,EAAA,SAAAU,EAAAC,GAAsD,OAAAV,OAAAW,UAAAC,eAAAnB,KAAAgB,EAAAC,IAGtDxB,EAAA2B,EAAA,GAIA3B,EAAAA,EAAA4B,EAAA,wiBCjEAC,EAAA,iBAAAC,QAAA,SACAD,EAAA,iBAAAC,QAAA,aACAD,EAAA,iBAAAC,QAAA,QAGAD,EAAA,iBAAAC,QAAA,MAAA,WACA,IAAAC,KA8BA,SAAAC,IACAC,aAAqBC,KAAA,UAAAC,KAAAJ,IAIrB,OACAK,QAnCA,SAAAC,GACAN,EAAAM,EACA,IAAA,IAAAjC,EAAA,EAAoBA,EAAA2B,EAAAO,SAAkBlC,EACtCyB,EAAA,iBAAAC,QAAA,KAAAS,UAAA,wEAAuHnC,EAAA,aAAA2B,EAAA3B,GAAAoC,KAAA,OAEvHR,KA+BAS,SA5BA,SAAAC,GACA,OAAAX,EAAAU,SAAAC,IA4BAC,OAzBA,SAAAC,GACAb,EAAAa,GAyBAC,cArBA,WAEA,IADA,IAAAL,EAAA,GACApC,EAAA,EAAoBA,EAAA2B,EAAAO,SAAkBlC,EACtCoC,GAAA,WAAApC,EAAA,aAAA2B,EAAA3B,GAAAoC,KAAA,MAEA,MAAA,gEAA+EA,GAiB/EM,WAdA,WACA,OAAAf,GAcAC,eAAAA,GA1CA,GAgDAH,EAAA,iBAAAC,QAAA,UAAA,WACA,IAAAiB,KA8BA,OACAJ,OA9BA,SAAAK,GACAD,EAAAC,GA8BAH,cA1BA,WAEA,IADA,IAAAL,EAAA,GACApC,EAAA,EAAoBA,EAAA2C,EAAAT,SAAoBlC,EACxCoC,GAAA,aAAApC,EAAA,aAAA2C,EAAA3C,GAAAO,KAAA,MAEA,OAAA6B,GAsBAS,aAnBA,WACA,OAAAF,GAmBAf,eAhBA,WACAC,aAAqBC,KAAA,YAAAC,KAAAY,KAgBrBG,iBAbA,WAEA,IADA,IAAAV,EAAA,GACApC,EAAA,EAAoBA,EAAA2C,EAAAT,SAAoBlC,EACxCoC,GAAA,OAAAO,EAAA3C,GAAAO,KAAA,MAEA,OAAA6B,IA5BA,GAyCAX,EAAA,iBAAAC,QAAA,KAAAS,UAEAV,EAAA,iBAAAC,QAAA,KAAAM,QAAA,SAAAe,GACAtB,EAAA,iBAAAC,QAAA,KAAAS,UAAAY,GACAtB,EAAA,iBAAAC,QAAA,KAAAS,UAAAV,EAAA,iBAAAC,QAAA,UAAAe,iBACAhB,EAAA,iBAAAC,QAAA,UAAAE,iBACAH,EAAA,iBAAAC,QAAA,KAAAS,UAAAV,EAAA,iBAAAC,QAAA,MAAAe,iBACAhB,EAAA,iBAAAC,QAAA,MAAAE,kBAIAH,EAAA,WAAAuB,MAAAvB,EAAA,iBAAAC,QAAA,MAAAM,QACAP,EAAA,WAAAwB,KAAAxB,EAAA,iBAAAC,QAAA,KAAAM,wDC1GAkB,EAAA,iBAAAxB,QAAAyB,YAEAD,EAAA,iBAAAxB,QAAAyB,SAAAnB,QAAA,MACAkB,EAAA,iBAAAE,MAAAC,UAAA,EACAH,EAAA,iBAAAE,MAAAE,SAAA,cAGAJ,EAAA,WAAAC,SAAAD,EAAA,iBAAAxB,QAAA,SAAAM,QCPAkB,EAAA,iBAAAxB,QAAA,cAEAwB,EAAA,iBAAAxB,QAAA,WAAA,WACA,IAAA6B,KAKA,SAAAC,EAAAC,GAEA,OAAAF,EAAAG,IAAAC,IAAuC,GAAAA,EAAAC,OAAA,OAAAD,EAAAF,WAAmCpB,SAAAoB,GAiB1E,OACAzB,QAxBA,SAAA6B,GACAN,EAAAM,GAwBAL,gBAAAA,EACAjB,OAjBA,SAAAC,GACAe,EAAAf,GAiBAsB,UAdA,SAAAL,GACAD,EAAAC,IACA5B,aAAyBC,KAAA,uBAAAC,KAAA0B,KAazBM,WAVA,SAAAN,GACAD,EAAAC,IACA5B,aAAyBC,KAAA,wBAAAC,KAAA0B,MAtBzB,GAoCAP,EAAA,iBAAAxB,QAAA,YAAA,WAOA,OACAsC,iBAPA,GAQAhC,QAPA,SAAAyB,GACAP,EAAA,iBAAAxB,QAAA,YAAAsC,iBAAAP,EACAP,EAAA,iBAAAE,MAAAC,UAAA,IAJA,GAeAH,EAAA,WAAAe,WAAAf,EAAA,iBAAAxB,QAAA,WAAAM,QACAkB,EAAA,WAAAgB,YAAAhB,EAAA,iBAAAxB,QAAA,YAAAM,QCtDAkB,EAAA,iBAAAxB,QAAAyC,UACAjB,EAAA,iBAAAxB,QAAA0C,YACAlB,EAAA,iBAAAxB,QAAA2C,WACAnB,EAAA,iBAAAxB,QAAA4C,cAEApB,EAAA,iBAAAxB,QAAAyC,OAAAnC,QAAA,MACAkB,EAAA,iBAAAE,MAAAC,UAAA,EACAH,EAAA,iBAAAE,MAAAE,SAAA,YAGAJ,EAAA,iBAAAxB,QAAA0C,SAAApC,QAAA,MACAkB,EAAA,iBAAAE,MAAAC,UAAA,EACAH,EAAA,iBAAAE,MAAAE,SAAA,cAGAJ,EAAA,iBAAAxB,QAAA2C,QAAArC,QAAA,MACAkB,EAAA,iBAAAE,MAAAC,UAAA,EACAH,EAAA,iBAAAE,MAAAE,SAAA,aAGAJ,EAAA,iBAAAxB,QAAA4C,WAAAtC,QAAA,MACAkB,EAAA,iBAAAE,MAAAC,UAAA,EACAH,EAAA,iBAAAE,MAAAE,SAAA,gBAGAJ,EAAA,WAAAiB,OAAAjB,EAAA,iBAAAxB,QAAA,OAAAM,QACAkB,EAAA,WAAAkB,SAAAlB,EAAA,iBAAAxB,QAAA,SAAAM,QACAkB,EAAA,WAAAmB,QAAAnB,EAAA,iBAAAxB,QAAA,QAAAM,QACAkB,EAAA,WAAAoB,WAAApB,EAAA,iBAAAxB,QAAA,WAAAM,kBC1BAuC,UAAA,SAAAC,GACA,IAAAb,EAAAa,EAAAzC,KACAmB,EAAA,WAAAS,EAAA7B,MAAA6B,EAAA5B,2TCHA0C,iBAAA7E,oBAAA,GAAA6E,iBACAC,OAAA9E,oBAAA,GAAA8E,OAEA,SAAAjC,gBAGA,OAFAgC,iBAAA/C,QAAA,UAAAe,gBACAgC,iBAAA/C,QAAA,MAAAe,gBAIAgC,iBAAA/C,QAAAiD,gBAAA,WACAC,eAAA5C,QAAA6C,SACA,QAAAC,GAAAD,QAAA,CACAJ,iBAAA/C,QAAA,WAAAa,OAAAsC,QAAAtB,aACAkB,iBAAA/C,QAAA,YAAAsC,iBAAAa,QAAAb,iBACAS,iBAAA/C,QAAA,MAAAa,OAAAsC,QAAAlD,SACA8C,iBAAA/C,QAAA,UAAAa,OAAAsC,QAAAlC,WACA,IAAAA,UAAA8B,iBAAA/C,QAAA,UAAAmB,eACAlB,QAAA8C,iBAAA/C,QAAA,MAAAgB,aACAqC,mBAAAN,iBAAA/C,QAAA,UAAAoB,mBACAkC,sBAAA,2IACA/B,KAAA8B,mBAAA,wHAAwKF,QAAAzC,KAAA4C,sBAAA,eAExKnD,aAAyBC,KAAA,4BAEzB4C,OAAAO,MAAA,6BAIAL,eAAAM,IAAAzC,EAAA0C,EAAA/C,GACA,OAAAA,EAGAwC,eAAAQ,KAAAC,EAAA5B,EAAA6B,SACAb,iBAAAW,KAAAC,EAAA5B,EAAA6B,GAGA,SAAAC,aACA,OAAAd,iBAAArB,MAAAoC,QAAA,YAIA,SAAAC,eACA,OAAAhB,iBAAArB,MAAAoC,QAAA,cAGA,OACAxD,QAAAA,SArCA,GA0CAP,sCAAA,WAAAkD,gBAAAF,iBAAA/C,QAAA,gBAAAM\",\"sourcesContent\":[\" \\t// The module cache\\n \\tvar installedModules = {};\\n\\n \\t// The require function\\n \\tfunction __webpack_require__(moduleId) {\\n\\n \\t\\t// Check if module is in cache\\n \\t\\tif(installedModules[moduleId]) {\\n \\t\\t\\treturn installedModules[moduleId].exports;\\n \\t\\t}\\n \\t\\t// Create a new module (and put it into the cache)\\n \\t\\tvar module = installedModules[moduleId] = {\\n \\t\\t\\ti: moduleId,\\n \\t\\t\\tl: false,\\n \\t\\t\\texports: {}\\n \\t\\t};\\n\\n \\t\\t// Execute the module function\\n \\t\\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\\n\\n \\t\\t// Flag the module as loaded\\n \\t\\tmodule.l = true;\\n\\n \\t\\t// Return the exports of the module\\n \\t\\treturn module.exports;\\n \\t}\\n\\n\\n \\t// expose the modules object (__webpack_modules__)\\n \\t__webpack_require__.m = modules;\\n\\n \\t// expose the module cache\\n \\t__webpack_require__.c = installedModules;\\n\\n \\t// define getter function for harmony exports\\n \\t__webpack_require__.d = function(exports, name, getter) {\\n \\t\\tif(!__webpack_require__.o(exports, name)) {\\n \\t\\t\\tObject.defineProperty(exports, name, {\\n \\t\\t\\t\\tconfigurable: false,\\n \\t\\t\\t\\tenumerable: true,\\n \\t\\t\\t\\tget: getter\\n \\t\\t\\t});\\n \\t\\t}\\n \\t};\\n\\n \\t// define __esModule on exports\\n \\t__webpack_require__.r = function(exports) {\\n \\t\\tObject.defineProperty(exports, '__esModule', { value: true });\\n \\t};\\n\\n \\t// getDefaultExport function for compatibility with non-harmony modules\\n \\t__webpack_require__.n = function(module) {\\n \\t\\tvar getter = module && module.__esModule ?\\n \\t\\t\\tfunction getDefault() { return module['default']; } :\\n \\t\\t\\tfunction getModuleExports() { return module; };\\n \\t\\t__webpack_require__.d(getter, 'a', getter);\\n \\t\\treturn getter;\\n \\t};\\n\\n \\t// Object.prototype.hasOwnProperty.call\\n \\t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\\n\\n \\t// __webpack_public_path__\\n \\t__webpack_require__.p = \\\"\\\";\\n\\n\\n \\t// Load entry module and return exports\\n \\treturn __webpack_require__(__webpack_require__.s = 2);\\n\",\"import {Blockly_Debuggee, dispatcher} from '../init.js';\\r\\n\\r\\nBlockly_Debuggee.actions[\\\"watch\\\"] = {};\\r\\nBlockly_Debuggee.actions[\\\"variables\\\"] = {};\\r\\nBlockly_Debuggee.actions[\\\"eval\\\"] = {};\\r\\n\\r\\n\\r\\nBlockly_Debuggee.actions[\\\"watch\\\"] = (function(){\\r\\n    var watches = [];\\r\\n    function handler(new_watches){\\r\\n        watches = new_watches;\\r\\n        for(var i=0; i<watches.length; ++i){\\r\\n            Blockly_Debuggee.actions[\\\"eval\\\"].evalLocal(\\\"var watches = Blockly_Debuggee.actions[\\\\\\\"watch\\\\\\\"].getWatches();\\\" + 'watches[' + i + '].value = ' + watches[i].code + ';\\\\n');\\r\\n        }\\r\\n        updateDebugger();\\r\\n    };\\r\\n\\r\\n    function includes(variable){\\r\\n        return watches.includes(variable);\\r\\n    };\\r\\n    \\r\\n    function update(updated){            \\r\\n        watches = updated;\\r\\n    };\\r\\n\\r\\n\\r\\n    function update_values(){\\r\\n        var code = '';\\r\\n        for(var i=0; i<watches.length; ++i){\\r\\n            code += 'watches[' + i + '].value = ' + watches[i].code + ';\\\\n';\\r\\n        }\\r\\n        return \\\"var watches = Blockly_Debuggee.actions[\\\\\\\"watch\\\\\\\"].getWatches();\\\" + code;\\r\\n    }\\r\\n    \\r\\n    function getWatches(){\\r\\n        return watches;\\r\\n    }\\r\\n    \\r\\n    function updateDebugger(){\\r\\n        postMessage({\\\"type\\\": \\\"watches\\\", \\\"data\\\" : watches});\\r\\n    }\\r\\n\\r\\n\\r\\n    return {\\r\\n        handler : handler,\\r\\n        includes: includes,\\r\\n        update : update,\\r\\n        update_values : update_values,\\r\\n        getWatches : getWatches,\\r\\n        updateDebugger : updateDebugger\\r\\n    };\\r\\n\\r\\n})();\\r\\n\\r\\n\\r\\nBlockly_Debuggee.actions[\\\"variables\\\"] = (function(){\\r\\n    var variables = [];\\r\\n    function update(new_vars){\\r\\n        variables = new_vars;\\r\\n    };\\r\\n\\r\\n\\r\\n    function update_values(){\\r\\n        var code = '';\\r\\n        for(var i=0; i<variables.length; ++i){\\r\\n            code += 'variables[' + i + '].value = ' + variables[i].name + ';\\\\n';\\r\\n        }\\r\\n        return code;\\r\\n    }\\r\\n    \\r\\n    function getVariables(){\\r\\n        return variables;\\r\\n    }\\r\\n    \\r\\n    function updateDebugger(){\\r\\n        postMessage({\\\"type\\\": \\\"variables\\\", \\\"data\\\" : variables});\\r\\n    }\\r\\n\\r\\n    function define_variables(){\\r\\n        var code = '';\\r\\n        for(var i=0; i<variables.length; ++i){\\r\\n            code += 'var ' + variables[i].name + ';\\\\n';\\r\\n        }\\r\\n        return code;\\r\\n    }\\r\\n\\r\\n    return {\\r\\n        update : update,\\r\\n        update_values : update_values,\\r\\n        getVariables : getVariables,\\r\\n        updateDebugger : updateDebugger,\\r\\n        define_variables : define_variables\\r\\n    }\\r\\n})();\\r\\n\\r\\n\\r\\nBlockly_Debuggee.actions[\\\"eval\\\"].evalLocal;\\r\\n\\r\\nBlockly_Debuggee.actions[\\\"eval\\\"].handler = function (expr){\\r\\n    Blockly_Debuggee.actions[\\\"eval\\\"].evalLocal(expr);\\r\\n    Blockly_Debuggee.actions[\\\"eval\\\"].evalLocal(Blockly_Debuggee.actions[\\\"variables\\\"].update_values());\\r\\n    Blockly_Debuggee.actions[\\\"variables\\\"].updateDebugger();\\r\\n    Blockly_Debuggee.actions[\\\"eval\\\"].evalLocal(Blockly_Debuggee.actions[\\\"watch\\\"].update_values());\\r\\n    Blockly_Debuggee.actions[\\\"watch\\\"].updateDebugger();   \\r\\n}\\r\\n\\r\\n\\r\\ndispatcher.watch = Blockly_Debuggee.actions[\\\"watch\\\"].handler;\\r\\ndispatcher.eval = Blockly_Debuggee.actions[\\\"eval\\\"].handler;\",\"import {Blockly_Debuggee, dispatcher} from '../init.js';\\r\\n\\r\\nBlockly_Debuggee.actions.continue = {};\\r\\n\\r\\nBlockly_Debuggee.actions.continue.handler = () => {\\r\\n  Blockly_Debuggee.state.stepWait = true;\\r\\n  Blockly_Debuggee.state.setState(\\\"continue\\\");\\r\\n};\\r\\n\\r\\ndispatcher.continue = Blockly_Debuggee.actions[\\\"continue\\\"].handler;\",\"import {Blockly_Debuggee, dispatcher} from '../init.js';\\r\\n\\r\\nBlockly_Debuggee.actions[\\\"breakpoint\\\"] = {};\\r\\n\\r\\nBlockly_Debuggee.actions[\\\"breakpoint\\\"] = (function(){\\r\\n    var breakpoints = [];\\r\\n    function handler(br){\\r\\n        breakpoints = br;\\r\\n    };\\r\\n\\r\\n    function includes_enable(block_id){\\r\\n        // check also if the breakpoint is enable\\r\\n        return breakpoints.map((obj)=>{if(obj.enable) return obj.block_id}).includes(block_id);\\r\\n    };\\r\\n    \\r\\n    function update(updated){\\r\\n        breakpoints = updated;\\r\\n    };\\r\\n\\r\\n    function wait_view(block_id){\\r\\n        if(includes_enable(block_id))\\r\\n            postMessage({\\\"type\\\": \\\"breakpoint_wait_view\\\", \\\"data\\\" : block_id});\\r\\n    }\\r\\n\\r\\n    function reset_view(block_id){\\r\\n        if(includes_enable(block_id))\\r\\n            postMessage({\\\"type\\\": \\\"breakpoint_reset_view\\\", \\\"data\\\" : block_id});\\r\\n    }\\r\\n\\r\\n    return {\\r\\n        handler : handler,\\r\\n        includes_enable: includes_enable,\\r\\n        update : update,\\r\\n        wait_view : wait_view,\\r\\n        reset_view : reset_view\\r\\n    };\\r\\n\\r\\n})();\\r\\n\\r\\n\\r\\nBlockly_Debuggee.actions[\\\"runToCursor\\\"] = (function(){\\r\\n    var cursorBreakpoint = \\\"\\\";\\r\\n    function handler(block_id){\\r\\n        Blockly_Debuggee.actions[\\\"runToCursor\\\"].cursorBreakpoint = block_id;\\r\\n        Blockly_Debuggee.state.stepWait = true;\\r\\n    }\\r\\n\\r\\n    return {\\r\\n        cursorBreakpoint : cursorBreakpoint,\\r\\n        handler : handler\\r\\n    }\\r\\n})();\\r\\n\\r\\n\\r\\n\\r\\ndispatcher.breakpoint = Blockly_Debuggee.actions[\\\"breakpoint\\\"].handler;\\r\\ndispatcher.runToCursor = Blockly_Debuggee.actions[\\\"runToCursor\\\"].handler;\\r\\n\",\"import {Blockly_Debuggee, dispatcher} from '../init.js';\\r\\n\\r\\nBlockly_Debuggee.actions.stepIn = {};\\r\\nBlockly_Debuggee.actions.stepOver = {};\\r\\nBlockly_Debuggee.actions.stepOut = {};\\r\\nBlockly_Debuggee.actions.stepParent = {};\\r\\n\\r\\nBlockly_Debuggee.actions.stepIn.handler = () => {\\r\\n    Blockly_Debuggee.state.stepWait = true;\\r\\n    Blockly_Debuggee.state.setState(\\\"stepIn\\\");\\r\\n};\\r\\n\\r\\nBlockly_Debuggee.actions.stepOver.handler = () => {\\r\\n  Blockly_Debuggee.state.stepWait = true;\\r\\n  Blockly_Debuggee.state.setState(\\\"stepOver\\\");\\r\\n};\\r\\n\\r\\nBlockly_Debuggee.actions.stepOut.handler = () => {\\r\\n  Blockly_Debuggee.state.stepWait = true;\\r\\n  Blockly_Debuggee.state.setState(\\\"stepOut\\\");\\r\\n};\\r\\n\\r\\nBlockly_Debuggee.actions.stepParent.handler = () => {\\r\\n  Blockly_Debuggee.state.stepWait = true;\\r\\n  Blockly_Debuggee.state.setState(\\\"stepParent\\\");\\r\\n};\\r\\n\\r\\ndispatcher.stepIn = Blockly_Debuggee.actions[\\\"stepIn\\\"].handler;\\r\\ndispatcher.stepOver = Blockly_Debuggee.actions[\\\"stepOver\\\"].handler;\\r\\ndispatcher.stepOut = Blockly_Debuggee.actions[\\\"stepOut\\\"].handler;\\r\\ndispatcher.stepParent = Blockly_Debuggee.actions[\\\"stepParent\\\"].handler;\",\"import \\\"./init.js\\\";\\r\\nimport {dispatcher} from \\\"./init.js\\\";\\r\\nimport './actions/actions.js';\\r\\n\\r\\nonmessage = function (msg) {\\r\\n    let obj = msg.data;\\r\\n    dispatcher[obj.type](obj.data);\\r\\n}\",\"import '../init.js';\\r\\nimport './watches.js'\\r\\nimport {dispatcher} from '../init.js';\\r\\nvar Blockly_Debuggee = require(\\\"../init.js\\\").Blockly_Debuggee;\\r\\nvar window = require(\\\"../init.js\\\").window;\\r\\n\\r\\nfunction update_values(){\\r\\n    var update_var = Blockly_Debuggee.actions[\\\"variables\\\"].update_values();\\r\\n    var update_watch = Blockly_Debuggee.actions[\\\"watch\\\"].update_values();\\r\\n    return update_var + update_watch;\\r\\n}\\r\\n\\r\\nBlockly_Debuggee.actions.start_debugging = (function (){\\r\\n    async function handler(content){\\r\\n        if(content!=undefined){        \\r\\n            Blockly_Debuggee.actions[\\\"breakpoint\\\"].update(content.breakpoints);\\r\\n            Blockly_Debuggee.actions[\\\"runToCursor\\\"].cursorBreakpoint = content.cursorBreakpoint;\\r\\n            Blockly_Debuggee.actions[\\\"watch\\\"].update(content.watches);\\r\\n            Blockly_Debuggee.actions[\\\"variables\\\"].update(content.variables);\\r\\n            var variables = Blockly_Debuggee.actions[\\\"variables\\\"].getVariables();\\r\\n            var watches = Blockly_Debuggee.actions[\\\"watch\\\"].getWatches();\\r\\n            var def_variables_code = Blockly_Debuggee.actions[\\\"variables\\\"].define_variables();\\r\\n            var variablesWatches_code = \\\"eval(update_values()); Blockly_Debuggee.actions[\\\\\\\"variables\\\\\\\"].updateDebugger(); Blockly_Debuggee.actions[\\\\\\\"watch\\\\\\\"].updateDebugger();\\\";        \\r\\n            await eval(def_variables_code + \\\" function evalLocal(expr){eval(expr);} Blockly_Debuggee.actions[\\\\\\\"eval\\\\\\\"].evalLocal = evalLocal;\\\" + \\\"async function code(){ \\\" + content.code + variablesWatches_code + \\\"}; code(); \\\");\\r\\n\\r\\n            postMessage({\\\"type\\\": \\\"execution_finished\\\"});\\r\\n        } else {\\r\\n            window.alert(\\\"The content is undefined.\\\");\\r\\n        }\\r\\n    };\\r\\n\\r\\n    async function $id(update_values, wait_call, code){\\r\\n        return code;\\r\\n    };\\r\\n\\r\\n    async function wait(nest, block_id, CurrentSystemEditorId){\\r\\n        await Blockly_Debuggee.wait(nest, block_id, CurrentSystemEditorId);\\r\\n    };\\r\\n\\r\\n    function isStepOver(){\\r\\n        return Blockly_Debuggee.state.isState(\\\"stepOver\\\");\\r\\n    };\\r\\n\\r\\n\\r\\n    function isStepParent(){\\r\\n        return Blockly_Debuggee.state.isState(\\\"stepParent\\\");\\r\\n    };\\r\\n\\r\\n    return {\\r\\n        handler : handler\\r\\n    };\\r\\n})();\\r\\n\\r\\n\\r\\ndispatcher.start_debugging = Blockly_Debuggee.actions[\\\"start_debugging\\\"].handler;\\r\\n\\r\\n\\r\\n\"]}","code":"!function(e){var t={};function a(n){if(t[n])return t[n].exports;var o=t[n]={i:n,l:!1,exports:{}};return e[n].call(o.exports,o,o.exports,a),o.l=!0,o.exports}a.m=e,a.c=t,a.d=function(e,t,n){a.o(e,t)||Object.defineProperty(e,t,{configurable:!1,enumerable:!0,get:n})},a.r=function(e){Object.defineProperty(e,\"__esModule\",{value:!0})},a.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return a.d(t,\"a\",t),t},a.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},a.p=\"\",a(a.s=2)}([function(e,t){throw new Error('Module parse failed: Can not use keyword \\'await\\' outside an async function (88:6)\\nYou may need an appropriate loader to handle this file type.\\n|     setTimeout(function(){ postMessage({\"type\": \"alert\", \"data\" : msg}); },2);\\r\\n|     while(Blockly_Debuggee.state.promptMsg == undefined){\\r\\n|       await (function(){return new Promise(resolve => setTimeout(resolve, 0));})();         // next_message();\\r\\n|     }\\r\\n|     var tmp = Blockly_Debuggee.state.promptMsg;\\r')},function(e,t,a){\"use strict\";var n=a(0);n.Blockly_Debuggee.actions.watch={},n.Blockly_Debuggee.actions.variables={},n.Blockly_Debuggee.actions.eval={},n.Blockly_Debuggee.actions.watch=function(){var e=[];function t(){postMessage({type:\"watches\",data:e})}return{handler:function(a){e=a;for(var o=0;o<e.length;++o)n.Blockly_Debuggee.actions.eval.evalLocal('var watches = Blockly_Debuggee.actions[\"watch\"].getWatches();watches['+o+\"].value = \"+e[o].code+\";\\n\");t()},includes:function(t){return e.includes(t)},update:function(t){e=t},update_values:function(){for(var t=\"\",a=0;a<e.length;++a)t+=\"watches[\"+a+\"].value = \"+e[a].code+\";\\n\";return'var watches = Blockly_Debuggee.actions[\"watch\"].getWatches();'+t},getWatches:function(){return e},updateDebugger:t}}(),n.Blockly_Debuggee.actions.variables=function(){var e=[];return{update:function(t){e=t},update_values:function(){for(var t=\"\",a=0;a<e.length;++a)t+=\"variables[\"+a+\"].value = \"+e[a].name+\";\\n\";return t},getVariables:function(){return e},updateDebugger:function(){postMessage({type:\"variables\",data:e})},define_variables:function(){for(var t=\"\",a=0;a<e.length;++a)t+=\"var \"+e[a].name+\";\\n\";return t}}}(),n.Blockly_Debuggee.actions.eval.evalLocal,n.Blockly_Debuggee.actions.eval.handler=function(e){n.Blockly_Debuggee.actions.eval.evalLocal(e),n.Blockly_Debuggee.actions.eval.evalLocal(n.Blockly_Debuggee.actions.variables.update_values()),n.Blockly_Debuggee.actions.variables.updateDebugger(),n.Blockly_Debuggee.actions.eval.evalLocal(n.Blockly_Debuggee.actions.watch.update_values()),n.Blockly_Debuggee.actions.watch.updateDebugger()},n.dispatcher.watch=n.Blockly_Debuggee.actions.watch.handler,n.dispatcher.eval=n.Blockly_Debuggee.actions.eval.handler},function(e,t,a){\"use strict\";a.r(t);var n=a(0);n.Blockly_Debuggee.actions.continue={},n.Blockly_Debuggee.actions.continue.handler=(()=>{n.Blockly_Debuggee.state.stepWait=!0,n.Blockly_Debuggee.state.setState(\"continue\")}),n.dispatcher.continue=n.Blockly_Debuggee.actions.continue.handler,n.Blockly_Debuggee.actions.breakpoint={},n.Blockly_Debuggee.actions.breakpoint=function(){var e=[];function t(t){return e.map(e=>{if(e.enable)return e.block_id}).includes(t)}return{handler:function(t){e=t},includes_enable:t,update:function(t){e=t},wait_view:function(e){t(e)&&postMessage({type:\"breakpoint_wait_view\",data:e})},reset_view:function(e){t(e)&&postMessage({type:\"breakpoint_reset_view\",data:e})}}}(),n.Blockly_Debuggee.actions.runToCursor=function(){return{cursorBreakpoint:\"\",handler:function(e){n.Blockly_Debuggee.actions.runToCursor.cursorBreakpoint=e,n.Blockly_Debuggee.state.stepWait=!0}}}(),n.dispatcher.breakpoint=n.Blockly_Debuggee.actions.breakpoint.handler,n.dispatcher.runToCursor=n.Blockly_Debuggee.actions.runToCursor.handler,n.Blockly_Debuggee.actions.stepIn={},n.Blockly_Debuggee.actions.stepOver={},n.Blockly_Debuggee.actions.stepOut={},n.Blockly_Debuggee.actions.stepParent={},n.Blockly_Debuggee.actions.stepIn.handler=(()=>{n.Blockly_Debuggee.state.stepWait=!0,n.Blockly_Debuggee.state.setState(\"stepIn\")}),n.Blockly_Debuggee.actions.stepOver.handler=(()=>{n.Blockly_Debuggee.state.stepWait=!0,n.Blockly_Debuggee.state.setState(\"stepOver\")}),n.Blockly_Debuggee.actions.stepOut.handler=(()=>{n.Blockly_Debuggee.state.stepWait=!0,n.Blockly_Debuggee.state.setState(\"stepOut\")}),n.Blockly_Debuggee.actions.stepParent.handler=(()=>{n.Blockly_Debuggee.state.stepWait=!0,n.Blockly_Debuggee.state.setState(\"stepParent\")}),n.dispatcher.stepIn=n.Blockly_Debuggee.actions.stepIn.handler,n.dispatcher.stepOver=n.Blockly_Debuggee.actions.stepOver.handler,n.dispatcher.stepOut=n.Blockly_Debuggee.actions.stepOut.handler,n.dispatcher.stepParent=n.Blockly_Debuggee.actions.stepParent.handler;a(4),a(1);onmessage=function(e){let t=e.data;n.dispatcher[t.type](t.data)}},,function(module,__webpack_exports__,__webpack_require__){\"use strict\";var _init_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(0),_init_js__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(_init_js__WEBPACK_IMPORTED_MODULE_0__),_watches_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(1),Blockly_Debuggee=__webpack_require__(0).Blockly_Debuggee,window=__webpack_require__(0).window;function update_values(){return Blockly_Debuggee.actions.variables.update_values()+Blockly_Debuggee.actions.watch.update_values()}Blockly_Debuggee.actions.start_debugging=function(){async function handler(content){if(void 0!=content){Blockly_Debuggee.actions.breakpoint.update(content.breakpoints),Blockly_Debuggee.actions.runToCursor.cursorBreakpoint=content.cursorBreakpoint,Blockly_Debuggee.actions.watch.update(content.watches),Blockly_Debuggee.actions.variables.update(content.variables);var variables=Blockly_Debuggee.actions.variables.getVariables(),watches=Blockly_Debuggee.actions.watch.getWatches(),def_variables_code=Blockly_Debuggee.actions.variables.define_variables(),variablesWatches_code='eval(update_values()); Blockly_Debuggee.actions[\"variables\"].updateDebugger(); Blockly_Debuggee.actions[\"watch\"].updateDebugger();';await eval(def_variables_code+' function evalLocal(expr){eval(expr);} Blockly_Debuggee.actions[\"eval\"].evalLocal = evalLocal;async function code(){ '+content.code+variablesWatches_code+\"}; code(); \"),postMessage({type:\"execution_finished\"})}else window.alert(\"The content is undefined.\")}async function $id(e,t,a){return a}async function wait(e,t,a){await Blockly_Debuggee.wait(e,t,a)}function isStepOver(){return Blockly_Debuggee.state.isState(\"stepOver\")}function isStepParent(){return Blockly_Debuggee.state.isState(\"stepParent\")}return{handler:handler}}(),_init_js__WEBPACK_IMPORTED_MODULE_0__.dispatcher.start_debugging=Blockly_Debuggee.actions.start_debugging.handler}]);","extractedComments":[]}