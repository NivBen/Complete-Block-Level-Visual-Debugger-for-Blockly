{"map":"{\"version\":3,\"sources\":[\"webpack/bootstrap\",\"C:\\\\Users\\\\Krystallia Savvaki\\\\Desktop\\\\blockly_debugger\\\\debuggee\\\\init.js\",\"C:\\\\Users\\\\Krystallia Savvaki\\\\Desktop\\\\blockly_debugger\\\\debuggee\\\\actions\\\\watches.js\",\"C:\\\\Users\\\\Krystallia Savvaki\\\\Desktop\\\\blockly_debugger\\\\debuggee\\\\actions\\\\continue.js\",\"C:\\\\Users\\\\Krystallia Savvaki\\\\Desktop\\\\blockly_debugger\\\\debuggee\\\\actions\\\\breakpoints.js\",\"C:\\\\Users\\\\Krystallia Savvaki\\\\Desktop\\\\blockly_debugger\\\\debuggee\\\\actions\\\\steps.js\",\"C:\\\\Users\\\\Krystallia Savvaki\\\\Desktop\\\\blockly_debugger\\\\debuggee\\\\debuggee.js\",\"C:\\\\Users\\\\Krystallia Savvaki\\\\Desktop\\\\blockly_debugger\\\\debuggee\\\\actions\\\\start.js\"],\"names\":[\"installedModules\",\"__webpack_require__\",\"moduleId\",\"exports\",\"module\",\"i\",\"l\",\"modules\",\"call\",\"m\",\"c\",\"d\",\"name\",\"getter\",\"o\",\"Object\",\"defineProperty\",\"configurable\",\"enumerable\",\"get\",\"r\",\"value\",\"n\",\"__esModule\",\"object\",\"property\",\"prototype\",\"hasOwnProperty\",\"p\",\"s\",\"Blockly_Debuggee\",\"actions\",\"state\",\"currNest\",\"currId\",\"promptMsg\",\"undefined\",\"stepWait\",\"currState\",\"stepIn\",\"stepOver\",\"stepParent\",\"stepOut\",\"continue\",\"isState\",\"this\",\"setState\",\"new_state\",\"wait\",\"next_message\",\"ms\",\"Promise\",\"resolve\",\"setTimeout\",\"async\",\"nest\",\"block_id\",\"CurrentSystemEditorId\",\"id\",\"postMessage\",\"type\",\"data\",\"highlightBlock\",\"hasBreakpoint\",\"breakpoint\",\"includes\",\"cursorBreakpoint\",\"updateDebugger\",\"window\",\"alert\",\"msg\",\"prompt\",\"tmp\",\"dispatcher\",\"_init_js__WEBPACK_IMPORTED_MODULE_0__\",\"watches\",\"handler\",\"new_watches\",\"length\",\"code\",\"console\",\"log\",\"variable\",\"update\",\"updated\",\"update_values\",\"getWatches\",\"variables\",\"new_vars\",\"getVariables\",\"define_variables\",\"watch\",\"eval\",\"init\",\"breakpoints\",\"br\",\"runToCursor\",\"onmessage\",\"obj\",\"start_debugging\",\"content\",\"def_variables_code\",\"variablesWatches_code\",\"$id\",\"wait_call\",\"isStepOver\",\"isStepParent\"],\"mappings\":\"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\",\"sourcesContent\":[\" \\t// The module cache\\n \\tvar installedModules = {};\\n\\n \\t// The require function\\n \\tfunction __webpack_require__(moduleId) {\\n\\n \\t\\t// Check if module is in cache\\n \\t\\tif(installedModules[moduleId]) {\\n \\t\\t\\treturn installedModules[moduleId].exports;\\n \\t\\t}\\n \\t\\t// Create a new module (and put it into the cache)\\n \\t\\tvar module = installedModules[moduleId] = {\\n \\t\\t\\ti: moduleId,\\n \\t\\t\\tl: false,\\n \\t\\t\\texports: {}\\n \\t\\t};\\n\\n \\t\\t// Execute the module function\\n \\t\\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\\n\\n \\t\\t// Flag the module as loaded\\n \\t\\tmodule.l = true;\\n\\n \\t\\t// Return the exports of the module\\n \\t\\treturn module.exports;\\n \\t}\\n\\n\\n \\t// expose the modules object (__webpack_modules__)\\n \\t__webpack_require__.m = modules;\\n\\n \\t// expose the module cache\\n \\t__webpack_require__.c = installedModules;\\n\\n \\t// define getter function for harmony exports\\n \\t__webpack_require__.d = function(exports, name, getter) {\\n \\t\\tif(!__webpack_require__.o(exports, name)) {\\n \\t\\t\\tObject.defineProperty(exports, name, {\\n \\t\\t\\t\\tconfigurable: false,\\n \\t\\t\\t\\tenumerable: true,\\n \\t\\t\\t\\tget: getter\\n \\t\\t\\t});\\n \\t\\t}\\n \\t};\\n\\n \\t// define __esModule on exports\\n \\t__webpack_require__.r = function(exports) {\\n \\t\\tObject.defineProperty(exports, '__esModule', { value: true });\\n \\t};\\n\\n \\t// getDefaultExport function for compatibility with non-harmony modules\\n \\t__webpack_require__.n = function(module) {\\n \\t\\tvar getter = module && module.__esModule ?\\n \\t\\t\\tfunction getDefault() { return module['default']; } :\\n \\t\\t\\tfunction getModuleExports() { return module; };\\n \\t\\t__webpack_require__.d(getter, 'a', getter);\\n \\t\\treturn getter;\\n \\t};\\n\\n \\t// Object.prototype.hasOwnProperty.call\\n \\t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\\n\\n \\t// __webpack_public_path__\\n \\t__webpack_require__.p = \\\"\\\";\\n\\n\\n \\t// Load entry module and return exports\\n \\treturn __webpack_require__(__webpack_require__.s = 2);\\n\",\"export var Blockly_Debuggee = {};\\r\\nBlockly_Debuggee.actions = {};\\r\\n\\r\\nBlockly_Debuggee.state = {\\r\\n  currNest : 0,\\r\\n  currId : '',\\r\\n  promptMsg : undefined,\\r\\n  stepWait : false,\\r\\n  currState: {\\r\\n    stepIn : false,\\r\\n    stepOver : false,\\r\\n    stepParent : false,\\r\\n    stepOut : false,\\r\\n    continue : true\\r\\n  },\\r\\n  isState: function(state){\\r\\n    return this.currState[state];\\r\\n  },\\r\\n  setState: function(new_state) {\\r\\n    this.currState[\\\"stepIn\\\"] = false;\\r\\n    this.currState[\\\"stepOver\\\"] = false;\\r\\n    this.currState[\\\"stepParent\\\"] = false;\\r\\n    this.currState[\\\"stepOut\\\"] = false;\\r\\n    this.currState[\\\"continue\\\"] = false;\\r\\n    this.currState[new_state] = true;\\r\\n  }\\r\\n};\\r\\n\\r\\n\\r\\nBlockly_Debuggee.wait = (function(){\\r\\n  function highlightBlock(id, CurrentSystemEditorId){\\r\\n    postMessage({\\\"type\\\": \\\"highlightBlock\\\", \\\"data\\\" : {\\\"id\\\" : id, \\\"CurrentSystemEditorId\\\" : CurrentSystemEditorId}});\\r\\n  }\\r\\n\\r\\n  function sleep(ms) {\\r\\n    return new Promise(resolve => setTimeout(resolve, ms));\\r\\n  }\\r\\n  \\r\\n  function next_message() { \\r\\n    return sleep(0); \\r\\n  }\\r\\n\\r\\n  async function wait(nest, block_id, CurrentSystemEditorId){\\r\\n    highlightBlock(block_id, CurrentSystemEditorId);\\r\\n    //  console.log(\\\"nest: \\\" + nest + \\\"    currNest: \\\" + Blockly_Debuggee.state.currNest + \\\"    State: \\\" );\\r\\n    //  console.log( Blockly_Debuggee.state.currState);\\r\\n\\r\\n    var hasBreakpoint = Blockly_Debuggee.actions.breakpoint.includes(block_id) || (Blockly_Debuggee.actions[\\\"runToCursor\\\"].cursorBreakpoint === block_id);\\r\\n    \\r\\n    if(Blockly_Debuggee.state.isState(\\\"continue\\\") && !hasBreakpoint){ \\r\\n      Blockly_Debuggee.state.currNest = nest;   \\r\\n      return;\\r\\n    }\\r\\n    if(Blockly_Debuggee.state.currNest == -1 && !hasBreakpoint) return;    // stepOver + stepOut for functions                   \\r\\n      if(Blockly_Debuggee.state.isState(\\\"stepIn\\\") || hasBreakpoint || nest <= Blockly_Debuggee.state.currNest){\\r\\n        if(Blockly_Debuggee.state.currId  === block_id && !hasBreakpoint) return;\\r\\n        if(Blockly_Debuggee.state.isState(\\\"stepParent\\\") && nest == Blockly_Debuggee.state.currNest && !hasBreakpoint) return;\\r\\n\\r\\n        // Send the array with vars values \\r\\n        Blockly_Debuggee.actions[\\\"variables\\\"].updateDebugger();\\r\\n        Blockly_Debuggee.actions[\\\"watch\\\"].updateDebugger();\\r\\n\\r\\n        while(!Blockly_Debuggee.state.stepWait){\\r\\n            await next_message();\\r\\n        }\\r\\n        Blockly_Debuggee.state.stepWait = false;\\r\\n        Blockly_Debuggee.state.currId = block_id;\\r\\n        if(Blockly_Debuggee.state.isState(\\\"stepOut\\\")){\\r\\n            Blockly_Debuggee.state.currNest = -1;\\r\\n            Blockly_Debuggee.state.currState.stepOut = false;                                  \\r\\n        }else{\\r\\n            Blockly_Debuggee.state.currNest = nest;\\r\\n        }       \\r\\n    }\\r\\n  };\\r\\n  return wait;  \\r\\n})();\\r\\n\\r\\n\\r\\nexport var window = {\\r\\n  alert : function(msg) {\\r\\n    // Blockly_Debuggee.actions[\\\"variables\\\"].updateDebugger();     // gia na fainontai swsta kata to alert ta value pisw ston pinaka --- to kanei meta to alert \\r\\n    postMessage({\\\"type\\\": \\\"alert\\\", \\\"data\\\" : msg});\\r\\n  },\\r\\n  prompt : async function (msg){\\r\\n    // Blockly_Debuggee.actions[\\\"variables\\\"].updateDebugger();     // gia na fainontai swsta kata to prompt ta value pisw ston pinaka --- to kanei mete \\r\\n    postMessage({\\\"type\\\": \\\"prompt\\\", \\\"data\\\" : msg});\\r\\n    while(Blockly_Debuggee.state.promptMsg == undefined){\\r\\n      await (function(){return new Promise(resolve => setTimeout(resolve, 0));})();         // next_message();\\r\\n    }\\r\\n    var tmp = Blockly_Debuggee.state.promptMsg;\\r\\n    Blockly_Debuggee.state.promptMsg = undefined;\\r\\n    return tmp;\\r\\n  }\\r\\n} ;  \\r\\n\\r\\n\\r\\nexport var dispatcher = {\\r\\n  prompt : (promptMsg) => {\\r\\n    Blockly_Debuggee.state.promptMsg = promptMsg;\\r\\n  }\\r\\n};\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\",\"import {Blockly_Debuggee, dispatcher} from '../init.js';\\r\\n\\r\\nBlockly_Debuggee.actions[\\\"watch\\\"] = {};\\r\\nBlockly_Debuggee.actions[\\\"variables\\\"] = {};\\r\\nBlockly_Debuggee.actions[\\\"eval\\\"] = {};\\r\\n\\r\\n\\r\\nBlockly_Debuggee.actions[\\\"watch\\\"] = (function(){\\r\\n    var watches = [];\\r\\n    function handler(new_watches){\\r\\n        watches = new_watches;\\r\\n        for(var i=0; i<watches.length; ++i){\\r\\n            Blockly_Debuggee.actions[\\\"eval\\\"].handler(\\\"var watches = Blockly_Debuggee.actions[\\\\\\\"watch\\\\\\\"].getWatches();\\\" + 'watches[' + i + '].value = ' + watches[i].code + ';\\\\n');\\r\\n        }\\r\\n        updateDebugger();\\r\\n        console.log(\\\"Handler (debuggee):\\\");\\r\\n        console.log(watches);\\r\\n    };\\r\\n\\r\\n    function includes(variable){\\r\\n        return watches.includes(variable);\\r\\n    };\\r\\n    \\r\\n    function update(updated){            \\r\\n        watches = updated;\\r\\n        console.log( \\\"Update (debuggee):\\\");\\r\\n        console.log(watches);\\r\\n    };\\r\\n\\r\\n\\r\\n    function update_values(){\\r\\n        var code = '';\\r\\n        for(var i=0; i<watches.length; ++i){\\r\\n            code += 'watches[' + i + '].value = ' + watches[i].code + ';\\\\n';\\r\\n        }\\r\\n        return \\\"var watches = Blockly_Debuggee.actions[\\\\\\\"watch\\\\\\\"].getWatches();\\\" + code;\\r\\n    }\\r\\n    \\r\\n    function getWatches(){\\r\\n        return watches;\\r\\n    }\\r\\n    \\r\\n    function updateDebugger(){\\r\\n        postMessage({\\\"type\\\": \\\"watches\\\", \\\"data\\\" : watches});\\r\\n    }\\r\\n\\r\\n\\r\\n    return {\\r\\n        handler : handler,\\r\\n        includes: includes,\\r\\n        update : update,\\r\\n        update_values : update_values,\\r\\n        getWatches : getWatches,\\r\\n        updateDebugger : updateDebugger\\r\\n    };\\r\\n\\r\\n})();\\r\\n\\r\\n\\r\\nBlockly_Debuggee.actions[\\\"variables\\\"] = (function(){\\r\\n    var variables = [];\\r\\n    function update(new_vars){\\r\\n        variables = new_vars;\\r\\n    };\\r\\n\\r\\n\\r\\n    function update_values(){\\r\\n        var code = '';\\r\\n        for(var i=0; i<variables.length; ++i){\\r\\n            code += 'variables[' + i + '].value = ' + variables[i].name + ';\\\\n';\\r\\n        }\\r\\n        return code;\\r\\n    }\\r\\n    \\r\\n    function getVariables(){\\r\\n        return variables;\\r\\n    }\\r\\n    \\r\\n    function updateDebugger(){\\r\\n        postMessage({\\\"type\\\": \\\"variables\\\", \\\"data\\\" : variables});\\r\\n    }\\r\\n\\r\\n    function define_variables(){\\r\\n        var code = '';\\r\\n        for(var i=0; i<variables.length; ++i){\\r\\n            code += 'var ' + variables[i].name + ';\\\\n';\\r\\n        }\\r\\n        return code;\\r\\n    }\\r\\n\\r\\n    return {\\r\\n        update : update,\\r\\n        update_values : update_values,\\r\\n        getVariables : getVariables,\\r\\n        updateDebugger : updateDebugger,\\r\\n        define_variables : define_variables\\r\\n    }\\r\\n})();\\r\\n\\r\\n\\r\\nBlockly_Debuggee.actions[\\\"eval\\\"].handler = function(){};\\r\\n\\r\\ndispatcher.watch = Blockly_Debuggee.actions[\\\"watch\\\"].handler;\\r\\ndispatcher.eval = Blockly_Debuggee.actions[\\\"eval\\\"].handler;\",\"import {Blockly_Debuggee, dispatcher} from '../init.js';\\r\\n\\r\\nBlockly_Debuggee.actions.continue = {};\\r\\n\\r\\nBlockly_Debuggee.actions.continue.handler = () => {\\r\\n  Blockly_Debuggee.state.stepWait = true;\\r\\n  Blockly_Debuggee.state.setState(\\\"continue\\\");\\r\\n};\\r\\n\\r\\ndispatcher.continue = Blockly_Debuggee.actions[\\\"continue\\\"].handler;\",\"import {Blockly_Debuggee, dispatcher} from '../init.js';\\r\\n\\r\\nBlockly_Debuggee.actions[\\\"breakpoint\\\"] = {};\\r\\n\\r\\nBlockly_Debuggee.actions[\\\"breakpoint\\\"] = (function(){\\r\\n    var breakpoints = [];\\r\\n    function handler(br){\\r\\n        breakpoints = br;\\r\\n    };\\r\\n\\r\\n    function includes(block_id){\\r\\n        return breakpoints.includes(block_id);\\r\\n    };\\r\\n    \\r\\n    function update(updated){\\r\\n        breakpoints = updated;\\r\\n    };\\r\\n\\r\\n    return {\\r\\n        handler : handler,\\r\\n        includes: includes,\\r\\n        update : update\\r\\n    };\\r\\n\\r\\n})();\\r\\n\\r\\n\\r\\nBlockly_Debuggee.actions[\\\"runToCursor\\\"] = (function(){\\r\\n    var cursorBreakpoint = \\\"\\\";\\r\\n    function handler(block_id){\\r\\n        Blockly_Debuggee.actions[\\\"runToCursor\\\"].cursorBreakpoint = block_id;\\r\\n        Blockly_Debuggee.state.stepWait = true;\\r\\n        //console.log(\\\"cursorBreakpoint:   \\\" + this.cursorBreakpoint);\\r\\n    }\\r\\n\\r\\n    return {\\r\\n        cursorBreakpoint : cursorBreakpoint,\\r\\n        handler : handler\\r\\n    }\\r\\n})();\\r\\n\\r\\n\\r\\n\\r\\ndispatcher.breakpoint = Blockly_Debuggee.actions[\\\"breakpoint\\\"].handler;\\r\\ndispatcher.runToCursor = Blockly_Debuggee.actions[\\\"runToCursor\\\"].handler;\\r\\n\",\"import {Blockly_Debuggee, dispatcher} from '../init.js';\\r\\n\\r\\nBlockly_Debuggee.actions.stepIn = {};\\r\\nBlockly_Debuggee.actions.stepOver = {};\\r\\nBlockly_Debuggee.actions.stepOut = {};\\r\\nBlockly_Debuggee.actions.stepParent = {};\\r\\n\\r\\nBlockly_Debuggee.actions.stepIn.handler = () => {\\r\\n    Blockly_Debuggee.state.stepWait = true;\\r\\n    Blockly_Debuggee.state.setState(\\\"stepIn\\\");\\r\\n};\\r\\n\\r\\nBlockly_Debuggee.actions.stepOver.handler = () => {\\r\\n  Blockly_Debuggee.state.stepWait = true;\\r\\n  Blockly_Debuggee.state.setState(\\\"stepOver\\\");\\r\\n};\\r\\n\\r\\nBlockly_Debuggee.actions.stepOut.handler = () => {\\r\\n  Blockly_Debuggee.state.stepWait = true;\\r\\n  Blockly_Debuggee.state.setState(\\\"stepOut\\\");\\r\\n};\\r\\n\\r\\nBlockly_Debuggee.actions.stepParent.handler = () => {\\r\\n  Blockly_Debuggee.state.stepWait = true;\\r\\n  Blockly_Debuggee.state.setState(\\\"stepParent\\\");\\r\\n};\\r\\n\\r\\ndispatcher.stepIn = Blockly_Debuggee.actions[\\\"stepIn\\\"].handler;\\r\\ndispatcher.stepOver = Blockly_Debuggee.actions[\\\"stepOver\\\"].handler;\\r\\ndispatcher.stepOut = Blockly_Debuggee.actions[\\\"stepOut\\\"].handler;\\r\\ndispatcher.stepParent = Blockly_Debuggee.actions[\\\"stepParent\\\"].handler;\",\"import \\\"./init.js\\\";\\r\\nimport {dispatcher} from \\\"./init.js\\\";\\r\\nimport './actions/actions.js';\\r\\n\\r\\nonmessage = function (msg) {\\r\\n    let obj = msg.data;\\r\\n    dispatcher[obj.type](obj.data);\\r\\n}\",\"import '../init.js';\\r\\nimport './watches.js'\\r\\nimport {dispatcher} from '../init.js';\\r\\nvar Blockly_Debuggee = require(\\\"../init.js\\\").Blockly_Debuggee;\\r\\nvar window = require(\\\"../init.js\\\").window;\\r\\n//var evalLocal;\\r\\n\\r\\nfunction update_values(){\\r\\n    var update_var = Blockly_Debuggee.actions[\\\"variables\\\"].update_values();\\r\\n    var update_watch = Blockly_Debuggee.actions[\\\"watch\\\"].update_values();\\r\\n    return update_var + update_watch;\\r\\n}\\r\\n\\r\\nBlockly_Debuggee.actions.start_debugging = (function (){\\r\\n    async function handler(content){\\r\\n        if(content!=undefined){        \\r\\n            Blockly_Debuggee.actions[\\\"breakpoint\\\"].update(content.breakpoints);\\r\\n            Blockly_Debuggee.actions[\\\"runToCursor\\\"].cursorBreakpoint = content.cursorBreakpoint;\\r\\n            Blockly_Debuggee.actions[\\\"watch\\\"].update(content.watches);\\r\\n            Blockly_Debuggee.actions[\\\"variables\\\"].update(content.variables);\\r\\n            var variables = Blockly_Debuggee.actions[\\\"variables\\\"].getVariables();\\r\\n            var watches = Blockly_Debuggee.actions[\\\"watch\\\"].getWatches();\\r\\n            var def_variables_code = Blockly_Debuggee.actions[\\\"variables\\\"].define_variables();\\r\\n            var variablesWatches_code = \\\"eval(update_values()); Blockly_Debuggee.actions[\\\\\\\"variables\\\\\\\"].updateDebugger(); Blockly_Debuggee.actions[\\\\\\\"watch\\\\\\\"].updateDebugger();\\\";        \\r\\n            await eval(def_variables_code + \\\" function evalLocal(expr){eval(expr);} Blockly_Debuggee.actions[\\\\\\\"eval\\\\\\\"].handler = evalLocal;\\\" + \\\"async function code(){ \\\" + content.code + variablesWatches_code + \\\"}; code(); \\\");\\r\\n\\r\\n            postMessage({\\\"type\\\": \\\"execution_finished\\\"});\\r\\n        } else {\\r\\n            window.alert(\\\"The content is undefined.\\\");\\r\\n        }\\r\\n    };\\r\\n\\r\\n    async function $id(update_values, wait_call, code){\\r\\n        return code;\\r\\n    };\\r\\n\\r\\n    async function wait(nest, block_id, CurrentSystemEditorId){\\r\\n        //evalLocal(\\\"window.alert(n + \\\\\\\"!!!!!\\\\\\\");\\\");\\r\\n        await Blockly_Debuggee.wait(nest, block_id, CurrentSystemEditorId);\\r\\n    };\\r\\n\\r\\n    function isStepOver(){\\r\\n        return Blockly_Debuggee.state.isState(\\\"stepOver\\\");\\r\\n    };\\r\\n\\r\\n\\r\\n    function isStepParent(){\\r\\n        return Blockly_Debuggee.state.isState(\\\"stepParent\\\");\\r\\n    };\\r\\n\\r\\n    return {\\r\\n        handler : handler\\r\\n    };\\r\\n})();\\r\\n\\r\\n\\r\\ndispatcher.start_debugging = Blockly_Debuggee.actions[\\\"start_debugging\\\"].handler;\\r\\n\\r\\n\\r\\n\"]}","code":"!function(e){var t={};function a(n){if(t[n])return t[n].exports;var r=t[n]={i:n,l:!1,exports:{}};return e[n].call(r.exports,r,r.exports,a),r.l=!0,r.exports}a.m=e,a.c=t,a.d=function(e,t,n){a.o(e,t)||Object.defineProperty(e,t,{configurable:!1,enumerable:!0,get:n})},a.r=function(e){Object.defineProperty(e,\"__esModule\",{value:!0})},a.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return a.d(t,\"a\",t),t},a.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},a.p=\"\",a(a.s=2)}([function(e,t,a){\"use strict\";a.r(t),a.d(t,\"Blockly_Debuggee\",function(){return n}),a.d(t,\"window\",function(){return r}),a.d(t,\"dispatcher\",function(){return s});var n={actions:{},state:{currNest:0,currId:\"\",promptMsg:void 0,stepWait:!1,currState:{stepIn:!1,stepOver:!1,stepParent:!1,stepOut:!1,continue:!0},isState:function(e){return this.currState[e]},setState:function(e){this.currState.stepIn=!1,this.currState.stepOver=!1,this.currState.stepParent=!1,this.currState.stepOut=!1,this.currState.continue=!1,this.currState[e]=!0}}};n.wait=function(){function e(){return e=0,new Promise(t=>setTimeout(t,e));var e}return async function(t,a,r){!function(e,t){postMessage({type:\"highlightBlock\",data:{id:e,CurrentSystemEditorId:t}})}(a,r);var s=n.actions.breakpoint.includes(a)||n.actions.runToCursor.cursorBreakpoint===a;if(!n.state.isState(\"continue\")||s){if((-1!=n.state.currNest||s)&&(n.state.isState(\"stepIn\")||s||t<=n.state.currNest)){if(n.state.currId===a&&!s)return;if(n.state.isState(\"stepParent\")&&t==n.state.currNest&&!s)return;for(n.actions.variables.updateDebugger(),n.actions.watch.updateDebugger();!n.state.stepWait;)await e();n.state.stepWait=!1,n.state.currId=a,n.state.isState(\"stepOut\")?(n.state.currNest=-1,n.state.currState.stepOut=!1):n.state.currNest=t}}else n.state.currNest=t}}();var r={alert:function(e){postMessage({type:\"alert\",data:e})},prompt:async function(e){for(postMessage({type:\"prompt\",data:e});void 0==n.state.promptMsg;)await new Promise(e=>setTimeout(e,0));var t=n.state.promptMsg;return n.state.promptMsg=void 0,t}},s={prompt:e=>{n.state.promptMsg=e}}},function(e,t,a){\"use strict\";var n=a(0);n.Blockly_Debuggee.actions.watch={},n.Blockly_Debuggee.actions.variables={},n.Blockly_Debuggee.actions.eval={},n.Blockly_Debuggee.actions.watch=function(){var e=[];function t(){postMessage({type:\"watches\",data:e})}return{handler:function(a){e=a;for(var r=0;r<e.length;++r)n.Blockly_Debuggee.actions.eval.handler('var watches = Blockly_Debuggee.actions[\"watch\"].getWatches();watches['+r+\"].value = \"+e[r].code+\";\\n\");t(),console.log(\"Handler (debuggee):\"),console.log(e)},includes:function(t){return e.includes(t)},update:function(t){e=t,console.log(\"Update (debuggee):\"),console.log(e)},update_values:function(){for(var t=\"\",a=0;a<e.length;++a)t+=\"watches[\"+a+\"].value = \"+e[a].code+\";\\n\";return'var watches = Blockly_Debuggee.actions[\"watch\"].getWatches();'+t},getWatches:function(){return e},updateDebugger:t}}(),n.Blockly_Debuggee.actions.variables=function(){var e=[];return{update:function(t){e=t},update_values:function(){for(var t=\"\",a=0;a<e.length;++a)t+=\"variables[\"+a+\"].value = \"+e[a].name+\";\\n\";return t},getVariables:function(){return e},updateDebugger:function(){postMessage({type:\"variables\",data:e})},define_variables:function(){for(var t=\"\",a=0;a<e.length;++a)t+=\"var \"+e[a].name+\";\\n\";return t}}}(),n.Blockly_Debuggee.actions.eval.handler=function(){},n.dispatcher.watch=n.Blockly_Debuggee.actions.watch.handler,n.dispatcher.eval=n.Blockly_Debuggee.actions.eval.handler},function(e,t,a){\"use strict\";a.r(t);var n=a(0);n.Blockly_Debuggee.actions.continue={},n.Blockly_Debuggee.actions.continue.handler=(()=>{n.Blockly_Debuggee.state.stepWait=!0,n.Blockly_Debuggee.state.setState(\"continue\")}),n.dispatcher.continue=n.Blockly_Debuggee.actions.continue.handler,n.Blockly_Debuggee.actions.breakpoint={},n.Blockly_Debuggee.actions.breakpoint=function(){var e=[];return{handler:function(t){e=t},includes:function(t){return e.includes(t)},update:function(t){e=t}}}(),n.Blockly_Debuggee.actions.runToCursor=function(){return{cursorBreakpoint:\"\",handler:function(e){n.Blockly_Debuggee.actions.runToCursor.cursorBreakpoint=e,n.Blockly_Debuggee.state.stepWait=!0}}}(),n.dispatcher.breakpoint=n.Blockly_Debuggee.actions.breakpoint.handler,n.dispatcher.runToCursor=n.Blockly_Debuggee.actions.runToCursor.handler,n.Blockly_Debuggee.actions.stepIn={},n.Blockly_Debuggee.actions.stepOver={},n.Blockly_Debuggee.actions.stepOut={},n.Blockly_Debuggee.actions.stepParent={},n.Blockly_Debuggee.actions.stepIn.handler=(()=>{n.Blockly_Debuggee.state.stepWait=!0,n.Blockly_Debuggee.state.setState(\"stepIn\")}),n.Blockly_Debuggee.actions.stepOver.handler=(()=>{n.Blockly_Debuggee.state.stepWait=!0,n.Blockly_Debuggee.state.setState(\"stepOver\")}),n.Blockly_Debuggee.actions.stepOut.handler=(()=>{n.Blockly_Debuggee.state.stepWait=!0,n.Blockly_Debuggee.state.setState(\"stepOut\")}),n.Blockly_Debuggee.actions.stepParent.handler=(()=>{n.Blockly_Debuggee.state.stepWait=!0,n.Blockly_Debuggee.state.setState(\"stepParent\")}),n.dispatcher.stepIn=n.Blockly_Debuggee.actions.stepIn.handler,n.dispatcher.stepOver=n.Blockly_Debuggee.actions.stepOver.handler,n.dispatcher.stepOut=n.Blockly_Debuggee.actions.stepOut.handler,n.dispatcher.stepParent=n.Blockly_Debuggee.actions.stepParent.handler;a(4),a(1);onmessage=function(e){let t=e.data;n.dispatcher[t.type](t.data)}},,function(module,__webpack_exports__,__webpack_require__){\"use strict\";var _init_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(0),_watches_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(1),Blockly_Debuggee=__webpack_require__(0).Blockly_Debuggee,window=__webpack_require__(0).window;function update_values(){return Blockly_Debuggee.actions.variables.update_values()+Blockly_Debuggee.actions.watch.update_values()}Blockly_Debuggee.actions.start_debugging=function(){async function handler(content){if(void 0!=content){Blockly_Debuggee.actions.breakpoint.update(content.breakpoints),Blockly_Debuggee.actions.runToCursor.cursorBreakpoint=content.cursorBreakpoint,Blockly_Debuggee.actions.watch.update(content.watches),Blockly_Debuggee.actions.variables.update(content.variables);var variables=Blockly_Debuggee.actions.variables.getVariables(),watches=Blockly_Debuggee.actions.watch.getWatches(),def_variables_code=Blockly_Debuggee.actions.variables.define_variables(),variablesWatches_code='eval(update_values()); Blockly_Debuggee.actions[\"variables\"].updateDebugger(); Blockly_Debuggee.actions[\"watch\"].updateDebugger();';await eval(def_variables_code+' function evalLocal(expr){eval(expr);} Blockly_Debuggee.actions[\"eval\"].handler = evalLocal;async function code(){ '+content.code+variablesWatches_code+\"}; code(); \"),postMessage({type:\"execution_finished\"})}else window.alert(\"The content is undefined.\")}async function $id(e,t,a){return a}async function wait(e,t,a){await Blockly_Debuggee.wait(e,t,a)}function isStepOver(){return Blockly_Debuggee.state.isState(\"stepOver\")}function isStepParent(){return Blockly_Debuggee.state.isState(\"stepParent\")}return{handler:handler}}(),_init_js__WEBPACK_IMPORTED_MODULE_0__.dispatcher.start_debugging=Blockly_Debuggee.actions.start_debugging.handler}]);","extractedComments":[]}