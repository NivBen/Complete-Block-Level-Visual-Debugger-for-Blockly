{"map":"{\"version\":3,\"sources\":[\"webpack/bootstrap\",\"C:\\\\Users\\\\user\\\\Desktop\\\\blockly_debugger\\\\debuggee\\\\init.js\",\"C:\\\\Users\\\\user\\\\Desktop\\\\blockly_debugger\\\\debuggee\\\\actions\\\\watches.js\",\"C:\\\\Users\\\\user\\\\Desktop\\\\blockly_debugger\\\\debuggee\\\\actions\\\\continue.js\",\"C:\\\\Users\\\\user\\\\Desktop\\\\blockly_debugger\\\\debuggee\\\\actions\\\\breakpoints.js\",\"C:\\\\Users\\\\user\\\\Desktop\\\\blockly_debugger\\\\debuggee\\\\actions\\\\steps.js\",\"C:\\\\Users\\\\user\\\\Desktop\\\\blockly_debugger\\\\debuggee\\\\debuggee.js\",\"C:\\\\Users\\\\user\\\\Desktop\\\\blockly_debugger\\\\debuggee\\\\actions\\\\start.js\"],\"names\":[\"installedModules\",\"__webpack_require__\",\"moduleId\",\"exports\",\"module\",\"i\",\"l\",\"modules\",\"call\",\"m\",\"c\",\"d\",\"name\",\"getter\",\"o\",\"Object\",\"defineProperty\",\"configurable\",\"enumerable\",\"get\",\"r\",\"value\",\"n\",\"__esModule\",\"object\",\"property\",\"prototype\",\"hasOwnProperty\",\"p\",\"s\",\"Blockly_Debuggee\",\"actions\",\"state\",\"currNest\",\"currId\",\"promptMsg\",\"undefined\",\"stepWait\",\"currState\",\"stepIn\",\"stepOver\",\"stepParent\",\"stepOut\",\"continue\",\"isState\",\"this\",\"setState\",\"new_state\",\"wait\",\"next_message\",\"ms\",\"Promise\",\"resolve\",\"setTimeout\",\"async\",\"nest\",\"block_id\",\"CurrentSystemEditorId\",\"id\",\"postMessage\",\"type\",\"data\",\"highlightBlock\",\"hasBreakpoint\",\"breakpoint\",\"includes_enable\",\"cursorBreakpoint\",\"updateDebugger\",\"wait_view\",\"reset_view\",\"window\",\"alert\",\"msg\",\"prompt\",\"tmp\",\"dispatcher\",\"_init_js__WEBPACK_IMPORTED_MODULE_0__\",\"watches\",\"handler\",\"new_watches\",\"length\",\"evalLocal\",\"code\",\"includes\",\"variable\",\"update\",\"updated\",\"update_values\",\"getWatches\",\"variables\",\"new_vars\",\"getVariables\",\"define_variables\",\"expr\",\"watch\",\"eval\",\"init\",\"breakpoints\",\"map\",\"obj\",\"enable\",\"br\",\"runToCursor\",\"onmessage\",\"start_debugging\",\"content\",\"def_variables_code\",\"variablesWatches_code\",\"$id\",\"wait_call\",\"isStepOver\",\"isStepParent\"],\"mappings\":\"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\",\"sourcesContent\":[\" \\t// The module cache\\n \\tvar installedModules = {};\\n\\n \\t// The require function\\n \\tfunction __webpack_require__(moduleId) {\\n\\n \\t\\t// Check if module is in cache\\n \\t\\tif(installedModules[moduleId]) {\\n \\t\\t\\treturn installedModules[moduleId].exports;\\n \\t\\t}\\n \\t\\t// Create a new module (and put it into the cache)\\n \\t\\tvar module = installedModules[moduleId] = {\\n \\t\\t\\ti: moduleId,\\n \\t\\t\\tl: false,\\n \\t\\t\\texports: {}\\n \\t\\t};\\n\\n \\t\\t// Execute the module function\\n \\t\\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\\n\\n \\t\\t// Flag the module as loaded\\n \\t\\tmodule.l = true;\\n\\n \\t\\t// Return the exports of the module\\n \\t\\treturn module.exports;\\n \\t}\\n\\n\\n \\t// expose the modules object (__webpack_modules__)\\n \\t__webpack_require__.m = modules;\\n\\n \\t// expose the module cache\\n \\t__webpack_require__.c = installedModules;\\n\\n \\t// define getter function for harmony exports\\n \\t__webpack_require__.d = function(exports, name, getter) {\\n \\t\\tif(!__webpack_require__.o(exports, name)) {\\n \\t\\t\\tObject.defineProperty(exports, name, {\\n \\t\\t\\t\\tconfigurable: false,\\n \\t\\t\\t\\tenumerable: true,\\n \\t\\t\\t\\tget: getter\\n \\t\\t\\t});\\n \\t\\t}\\n \\t};\\n\\n \\t// define __esModule on exports\\n \\t__webpack_require__.r = function(exports) {\\n \\t\\tObject.defineProperty(exports, '__esModule', { value: true });\\n \\t};\\n\\n \\t// getDefaultExport function for compatibility with non-harmony modules\\n \\t__webpack_require__.n = function(module) {\\n \\t\\tvar getter = module && module.__esModule ?\\n \\t\\t\\tfunction getDefault() { return module['default']; } :\\n \\t\\t\\tfunction getModuleExports() { return module; };\\n \\t\\t__webpack_require__.d(getter, 'a', getter);\\n \\t\\treturn getter;\\n \\t};\\n\\n \\t// Object.prototype.hasOwnProperty.call\\n \\t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\\n\\n \\t// __webpack_public_path__\\n \\t__webpack_require__.p = \\\"\\\";\\n\\n\\n \\t// Load entry module and return exports\\n \\treturn __webpack_require__(__webpack_require__.s = 2);\\n\",\"export var Blockly_Debuggee = {};\\r\\nBlockly_Debuggee.actions = {};\\r\\n\\r\\nBlockly_Debuggee.state = {\\r\\n  currNest : 0,\\r\\n  currId : '',\\r\\n  promptMsg : undefined,\\r\\n  stepWait : false,\\r\\n  currState: {\\r\\n    stepIn : false,\\r\\n    stepOver : false,\\r\\n    stepParent : false,\\r\\n    stepOut : false,\\r\\n    continue : true\\r\\n  },\\r\\n  isState: function(state){\\r\\n    return this.currState[state];\\r\\n  },\\r\\n  setState: function(new_state) {\\r\\n    this.currState[\\\"stepIn\\\"] = false;\\r\\n    this.currState[\\\"stepOver\\\"] = false;\\r\\n    this.currState[\\\"stepParent\\\"] = false;\\r\\n    this.currState[\\\"stepOut\\\"] = false;\\r\\n    this.currState[\\\"continue\\\"] = false;\\r\\n    this.currState[new_state] = true;\\r\\n  }\\r\\n};\\r\\n\\r\\n\\r\\nBlockly_Debuggee.wait = (function(){\\r\\n  function highlightBlock(id, CurrentSystemEditorId){\\r\\n    postMessage({\\\"type\\\": \\\"highlightBlock\\\", \\\"data\\\" : {\\\"id\\\" : id, \\\"CurrentSystemEditorId\\\" : CurrentSystemEditorId}});\\r\\n  }\\r\\n\\r\\n  function sleep(ms) {\\r\\n    return new Promise(resolve => setTimeout(resolve, ms));\\r\\n  }\\r\\n  \\r\\n  function next_message() { \\r\\n    return sleep(0); \\r\\n  }\\r\\n\\r\\n  async function wait(nest, block_id, CurrentSystemEditorId){\\r\\n    highlightBlock(block_id, CurrentSystemEditorId);\\r\\n    //  console.log(\\\"nest: \\\" + nest + \\\"    currNest: \\\" + Blockly_Debuggee.state.currNest + \\\"    State: \\\" );\\r\\n    //  console.log( Blockly_Debuggee.state.currState);\\r\\n\\r\\n    var hasBreakpoint = Blockly_Debuggee.actions.breakpoint.includes_enable(block_id) || (Blockly_Debuggee.actions[\\\"runToCursor\\\"].cursorBreakpoint === block_id);\\r\\n    \\r\\n    if(Blockly_Debuggee.state.isState(\\\"continue\\\") && !hasBreakpoint){ \\r\\n      Blockly_Debuggee.state.currNest = nest;   \\r\\n      return;\\r\\n    }\\r\\n    if(Blockly_Debuggee.state.currNest == -1 && !hasBreakpoint) return;    // stepOver + stepOut for functions                   \\r\\n      if(Blockly_Debuggee.state.isState(\\\"stepIn\\\") || hasBreakpoint || nest <= Blockly_Debuggee.state.currNest){\\r\\n        if(Blockly_Debuggee.state.currId  === block_id && !hasBreakpoint) return;\\r\\n        if(Blockly_Debuggee.state.isState(\\\"stepParent\\\") && nest == Blockly_Debuggee.state.currNest && !hasBreakpoint) return;\\r\\n\\r\\n        // Send the array with vars values \\r\\n        Blockly_Debuggee.actions[\\\"variables\\\"].updateDebugger();\\r\\n        Blockly_Debuggee.actions[\\\"watch\\\"].updateDebugger();\\r\\n        Blockly_Debuggee.actions[\\\"breakpoint\\\"].wait_view(block_id);\\r\\n\\r\\n        while(!Blockly_Debuggee.state.stepWait){\\r\\n            await next_message();\\r\\n        }\\r\\n        Blockly_Debuggee.actions[\\\"breakpoint\\\"].reset_view(block_id);\\r\\n        \\r\\n        Blockly_Debuggee.state.stepWait = false;\\r\\n        Blockly_Debuggee.state.currId = block_id;\\r\\n        if(Blockly_Debuggee.state.isState(\\\"stepOut\\\")){\\r\\n            Blockly_Debuggee.state.currNest = -1;\\r\\n            Blockly_Debuggee.state.currState.stepOut = false;                                  \\r\\n        }else{\\r\\n            Blockly_Debuggee.state.currNest = nest;\\r\\n        }       \\r\\n    }\\r\\n  };\\r\\n  return wait;  \\r\\n})();\\r\\n\\r\\n\\r\\nexport var window = {\\r\\n  alert : function(msg) {\\r\\n    // Blockly_Debuggee.actions[\\\"variables\\\"].updateDebugger();     // gia na fainontai swsta kata to alert ta value pisw ston pinaka --- to kanei meta to alert \\r\\n    postMessage({\\\"type\\\": \\\"alert\\\", \\\"data\\\" : msg});\\r\\n  },\\r\\n  prompt : async function (msg){\\r\\n    // Blockly_Debuggee.actions[\\\"variables\\\"].updateDebugger();     // gia na fainontai swsta kata to prompt ta value pisw ston pinaka --- to kanei mete \\r\\n    postMessage({\\\"type\\\": \\\"prompt\\\", \\\"data\\\" : msg});\\r\\n    while(Blockly_Debuggee.state.promptMsg == undefined){\\r\\n      await (function(){return new Promise(resolve => setTimeout(resolve, 0));})();         // next_message();\\r\\n    }\\r\\n    var tmp = Blockly_Debuggee.state.promptMsg;\\r\\n    Blockly_Debuggee.state.promptMsg = undefined;\\r\\n    return tmp;\\r\\n  }\\r\\n} ;  \\r\\n\\r\\n\\r\\nexport var dispatcher = {\\r\\n  prompt : (promptMsg) => {\\r\\n    Blockly_Debuggee.state.promptMsg = promptMsg;\\r\\n  }\\r\\n};\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\",\"import {Blockly_Debuggee, dispatcher} from '../init.js';\\r\\n\\r\\nBlockly_Debuggee.actions[\\\"watch\\\"] = {};\\r\\nBlockly_Debuggee.actions[\\\"variables\\\"] = {};\\r\\nBlockly_Debuggee.actions[\\\"eval\\\"] = {};\\r\\n\\r\\n\\r\\nBlockly_Debuggee.actions[\\\"watch\\\"] = (function(){\\r\\n    var watches = [];\\r\\n    function handler(new_watches){\\r\\n        watches = new_watches;\\r\\n        for(var i=0; i<watches.length; ++i){\\r\\n            Blockly_Debuggee.actions[\\\"eval\\\"].evalLocal(\\\"var watches = Blockly_Debuggee.actions[\\\\\\\"watch\\\\\\\"].getWatches();\\\" + 'watches[' + i + '].value = ' + watches[i].code + ';\\\\n');\\r\\n        }\\r\\n        updateDebugger();\\r\\n    };\\r\\n\\r\\n    function includes(variable){\\r\\n        return watches.includes(variable);\\r\\n    };\\r\\n    \\r\\n    function update(updated){            \\r\\n        watches = updated;\\r\\n    };\\r\\n\\r\\n\\r\\n    function update_values(){\\r\\n        var code = '';\\r\\n        for(var i=0; i<watches.length; ++i){\\r\\n            code += 'watches[' + i + '].value = ' + watches[i].code + ';\\\\n';\\r\\n        }\\r\\n        return \\\"var watches = Blockly_Debuggee.actions[\\\\\\\"watch\\\\\\\"].getWatches();\\\" + code;\\r\\n    }\\r\\n    \\r\\n    function getWatches(){\\r\\n        return watches;\\r\\n    }\\r\\n    \\r\\n    function updateDebugger(){\\r\\n        postMessage({\\\"type\\\": \\\"watches\\\", \\\"data\\\" : watches});\\r\\n    }\\r\\n\\r\\n\\r\\n    return {\\r\\n        handler : handler,\\r\\n        includes: includes,\\r\\n        update : update,\\r\\n        update_values : update_values,\\r\\n        getWatches : getWatches,\\r\\n        updateDebugger : updateDebugger\\r\\n    };\\r\\n\\r\\n})();\\r\\n\\r\\n\\r\\nBlockly_Debuggee.actions[\\\"variables\\\"] = (function(){\\r\\n    var variables = [];\\r\\n    function update(new_vars){\\r\\n        variables = new_vars;\\r\\n    };\\r\\n\\r\\n\\r\\n    function update_values(){\\r\\n        var code = '';\\r\\n        for(var i=0; i<variables.length; ++i){\\r\\n            code += 'variables[' + i + '].value = ' + variables[i].name + ';\\\\n';\\r\\n        }\\r\\n        return code;\\r\\n    }\\r\\n    \\r\\n    function getVariables(){\\r\\n        return variables;\\r\\n    }\\r\\n    \\r\\n    function updateDebugger(){\\r\\n        postMessage({\\\"type\\\": \\\"variables\\\", \\\"data\\\" : variables});\\r\\n    }\\r\\n\\r\\n    function define_variables(){\\r\\n        var code = '';\\r\\n        for(var i=0; i<variables.length; ++i){\\r\\n            code += 'var ' + variables[i].name + ';\\\\n';\\r\\n        }\\r\\n        return code;\\r\\n    }\\r\\n\\r\\n    return {\\r\\n        update : update,\\r\\n        update_values : update_values,\\r\\n        getVariables : getVariables,\\r\\n        updateDebugger : updateDebugger,\\r\\n        define_variables : define_variables\\r\\n    }\\r\\n})();\\r\\n\\r\\n\\r\\nBlockly_Debuggee.actions[\\\"eval\\\"].evalLocal;\\r\\n\\r\\nBlockly_Debuggee.actions[\\\"eval\\\"].handler = function (expr){\\r\\n    Blockly_Debuggee.actions[\\\"eval\\\"].evalLocal(expr);\\r\\n    Blockly_Debuggee.actions[\\\"eval\\\"].evalLocal(Blockly_Debuggee.actions[\\\"variables\\\"].update_values());\\r\\n    Blockly_Debuggee.actions[\\\"variables\\\"].updateDebugger();\\r\\n    Blockly_Debuggee.actions[\\\"eval\\\"].evalLocal(Blockly_Debuggee.actions[\\\"watch\\\"].update_values());\\r\\n    Blockly_Debuggee.actions[\\\"watch\\\"].updateDebugger();   \\r\\n}\\r\\n\\r\\n\\r\\ndispatcher.watch = Blockly_Debuggee.actions[\\\"watch\\\"].handler;\\r\\ndispatcher.eval = Blockly_Debuggee.actions[\\\"eval\\\"].handler;\",\"import {Blockly_Debuggee, dispatcher} from '../init.js';\\r\\n\\r\\nBlockly_Debuggee.actions.continue = {};\\r\\n\\r\\nBlockly_Debuggee.actions.continue.handler = () => {\\r\\n  Blockly_Debuggee.state.stepWait = true;\\r\\n  Blockly_Debuggee.state.setState(\\\"continue\\\");\\r\\n};\\r\\n\\r\\ndispatcher.continue = Blockly_Debuggee.actions[\\\"continue\\\"].handler;\",\"import {Blockly_Debuggee, dispatcher} from '../init.js';\\r\\n\\r\\nBlockly_Debuggee.actions[\\\"breakpoint\\\"] = {};\\r\\n\\r\\nBlockly_Debuggee.actions[\\\"breakpoint\\\"] = (function(){\\r\\n    var breakpoints = [];\\r\\n    function handler(br){\\r\\n        breakpoints = br;\\r\\n    };\\r\\n\\r\\n    function includes_enable(block_id){\\r\\n        // check also if the breakpoint is enable\\r\\n        return breakpoints.map((obj)=>{if(obj.enable) return obj.block_id}).includes(block_id);\\r\\n    };\\r\\n    \\r\\n    function update(updated){\\r\\n        breakpoints = updated;\\r\\n    };\\r\\n\\r\\n    function wait_view(block_id){\\r\\n        if(includes_enable(block_id))\\r\\n            postMessage({\\\"type\\\": \\\"breakpoint_wait_view\\\", \\\"data\\\" : block_id});\\r\\n    }\\r\\n\\r\\n    function reset_view(block_id){\\r\\n        if(includes_enable(block_id))\\r\\n            postMessage({\\\"type\\\": \\\"breakpoint_reset_view\\\", \\\"data\\\" : block_id});\\r\\n    }\\r\\n\\r\\n    return {\\r\\n        handler : handler,\\r\\n        includes_enable: includes_enable,\\r\\n        update : update,\\r\\n        wait_view : wait_view,\\r\\n        reset_view : reset_view\\r\\n    };\\r\\n\\r\\n})();\\r\\n\\r\\n\\r\\nBlockly_Debuggee.actions[\\\"runToCursor\\\"] = (function(){\\r\\n    var cursorBreakpoint = \\\"\\\";\\r\\n    function handler(block_id){\\r\\n        Blockly_Debuggee.actions[\\\"runToCursor\\\"].cursorBreakpoint = block_id;\\r\\n        Blockly_Debuggee.state.stepWait = true;\\r\\n        //console.log(\\\"cursorBreakpoint:   \\\" + this.cursorBreakpoint);\\r\\n    }\\r\\n\\r\\n    return {\\r\\n        cursorBreakpoint : cursorBreakpoint,\\r\\n        handler : handler\\r\\n    }\\r\\n})();\\r\\n\\r\\n\\r\\n\\r\\ndispatcher.breakpoint = Blockly_Debuggee.actions[\\\"breakpoint\\\"].handler;\\r\\ndispatcher.runToCursor = Blockly_Debuggee.actions[\\\"runToCursor\\\"].handler;\\r\\n\",\"import {Blockly_Debuggee, dispatcher} from '../init.js';\\r\\n\\r\\nBlockly_Debuggee.actions.stepIn = {};\\r\\nBlockly_Debuggee.actions.stepOver = {};\\r\\nBlockly_Debuggee.actions.stepOut = {};\\r\\nBlockly_Debuggee.actions.stepParent = {};\\r\\n\\r\\nBlockly_Debuggee.actions.stepIn.handler = () => {\\r\\n    Blockly_Debuggee.state.stepWait = true;\\r\\n    Blockly_Debuggee.state.setState(\\\"stepIn\\\");\\r\\n};\\r\\n\\r\\nBlockly_Debuggee.actions.stepOver.handler = () => {\\r\\n  Blockly_Debuggee.state.stepWait = true;\\r\\n  Blockly_Debuggee.state.setState(\\\"stepOver\\\");\\r\\n};\\r\\n\\r\\nBlockly_Debuggee.actions.stepOut.handler = () => {\\r\\n  Blockly_Debuggee.state.stepWait = true;\\r\\n  Blockly_Debuggee.state.setState(\\\"stepOut\\\");\\r\\n};\\r\\n\\r\\nBlockly_Debuggee.actions.stepParent.handler = () => {\\r\\n  Blockly_Debuggee.state.stepWait = true;\\r\\n  Blockly_Debuggee.state.setState(\\\"stepParent\\\");\\r\\n};\\r\\n\\r\\ndispatcher.stepIn = Blockly_Debuggee.actions[\\\"stepIn\\\"].handler;\\r\\ndispatcher.stepOver = Blockly_Debuggee.actions[\\\"stepOver\\\"].handler;\\r\\ndispatcher.stepOut = Blockly_Debuggee.actions[\\\"stepOut\\\"].handler;\\r\\ndispatcher.stepParent = Blockly_Debuggee.actions[\\\"stepParent\\\"].handler;\",\"import \\\"./init.js\\\";\\r\\nimport {dispatcher} from \\\"./init.js\\\";\\r\\nimport './actions/actions.js';\\r\\n\\r\\nonmessage = function (msg) {\\r\\n    let obj = msg.data;\\r\\n    dispatcher[obj.type](obj.data);\\r\\n}\",\"import '../init.js';\\r\\nimport './watches.js'\\r\\nimport {dispatcher} from '../init.js';\\r\\nvar Blockly_Debuggee = require(\\\"../init.js\\\").Blockly_Debuggee;\\r\\nvar window = require(\\\"../init.js\\\").window;\\r\\n//var evalLocal;\\r\\n\\r\\nfunction update_values(){\\r\\n    var update_var = Blockly_Debuggee.actions[\\\"variables\\\"].update_values();\\r\\n    var update_watch = Blockly_Debuggee.actions[\\\"watch\\\"].update_values();\\r\\n    return update_var + update_watch;\\r\\n}\\r\\n\\r\\nBlockly_Debuggee.actions.start_debugging = (function (){\\r\\n    async function handler(content){\\r\\n        if(content!=undefined){        \\r\\n            Blockly_Debuggee.actions[\\\"breakpoint\\\"].update(content.breakpoints);\\r\\n            Blockly_Debuggee.actions[\\\"runToCursor\\\"].cursorBreakpoint = content.cursorBreakpoint;\\r\\n            Blockly_Debuggee.actions[\\\"watch\\\"].update(content.watches);\\r\\n            Blockly_Debuggee.actions[\\\"variables\\\"].update(content.variables);\\r\\n            var variables = Blockly_Debuggee.actions[\\\"variables\\\"].getVariables();\\r\\n            var watches = Blockly_Debuggee.actions[\\\"watch\\\"].getWatches();\\r\\n            var def_variables_code = Blockly_Debuggee.actions[\\\"variables\\\"].define_variables();\\r\\n            var variablesWatches_code = \\\"eval(update_values()); Blockly_Debuggee.actions[\\\\\\\"variables\\\\\\\"].updateDebugger(); Blockly_Debuggee.actions[\\\\\\\"watch\\\\\\\"].updateDebugger();\\\";        \\r\\n            await eval(def_variables_code + \\\" function evalLocal(expr){eval(expr);} Blockly_Debuggee.actions[\\\\\\\"eval\\\\\\\"].evalLocal = evalLocal;\\\" + \\\"async function code(){ \\\" + content.code + variablesWatches_code + \\\"}; code(); \\\");\\r\\n\\r\\n            postMessage({\\\"type\\\": \\\"execution_finished\\\"});\\r\\n        } else {\\r\\n            window.alert(\\\"The content is undefined.\\\");\\r\\n        }\\r\\n    };\\r\\n\\r\\n    async function $id(update_values, wait_call, code){\\r\\n        return code;\\r\\n    };\\r\\n\\r\\n    async function wait(nest, block_id, CurrentSystemEditorId){\\r\\n        //evalLocal(\\\"window.alert(n + \\\\\\\"!!!!!\\\\\\\");\\\");\\r\\n        await Blockly_Debuggee.wait(nest, block_id, CurrentSystemEditorId);\\r\\n    };\\r\\n\\r\\n    function isStepOver(){\\r\\n        return Blockly_Debuggee.state.isState(\\\"stepOver\\\");\\r\\n    };\\r\\n\\r\\n\\r\\n    function isStepParent(){\\r\\n        return Blockly_Debuggee.state.isState(\\\"stepParent\\\");\\r\\n    };\\r\\n\\r\\n    return {\\r\\n        handler : handler\\r\\n    };\\r\\n})();\\r\\n\\r\\n\\r\\ndispatcher.start_debugging = Blockly_Debuggee.actions[\\\"start_debugging\\\"].handler;\\r\\n\\r\\n\\r\\n\"]}","code":"!function(e){var t={};function a(n){if(t[n])return t[n].exports;var c=t[n]={i:n,l:!1,exports:{}};return e[n].call(c.exports,c,c.exports,a),c.l=!0,c.exports}a.m=e,a.c=t,a.d=function(e,t,n){a.o(e,t)||Object.defineProperty(e,t,{configurable:!1,enumerable:!0,get:n})},a.r=function(e){Object.defineProperty(e,\"__esModule\",{value:!0})},a.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return a.d(t,\"a\",t),t},a.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},a.p=\"\",a(a.s=2)}([function(e,t,a){\"use strict\";a.r(t),a.d(t,\"Blockly_Debuggee\",function(){return n}),a.d(t,\"window\",function(){return c}),a.d(t,\"dispatcher\",function(){return r});var n={actions:{},state:{currNest:0,currId:\"\",promptMsg:void 0,stepWait:!1,currState:{stepIn:!1,stepOver:!1,stepParent:!1,stepOut:!1,continue:!0},isState:function(e){return this.currState[e]},setState:function(e){this.currState.stepIn=!1,this.currState.stepOver=!1,this.currState.stepParent=!1,this.currState.stepOut=!1,this.currState.continue=!1,this.currState[e]=!0}}};n.wait=function(){function e(){return e=0,new Promise(t=>setTimeout(t,e));var e}return async function(t,a,c){!function(e,t){postMessage({type:\"highlightBlock\",data:{id:e,CurrentSystemEditorId:t}})}(a,c);var r=n.actions.breakpoint.includes_enable(a)||n.actions.runToCursor.cursorBreakpoint===a;if(!n.state.isState(\"continue\")||r){if((-1!=n.state.currNest||r)&&(n.state.isState(\"stepIn\")||r||t<=n.state.currNest)){if(n.state.currId===a&&!r)return;if(n.state.isState(\"stepParent\")&&t==n.state.currNest&&!r)return;for(n.actions.variables.updateDebugger(),n.actions.watch.updateDebugger(),n.actions.breakpoint.wait_view(a);!n.state.stepWait;)await e();n.actions.breakpoint.reset_view(a),n.state.stepWait=!1,n.state.currId=a,n.state.isState(\"stepOut\")?(n.state.currNest=-1,n.state.currState.stepOut=!1):n.state.currNest=t}}else n.state.currNest=t}}();var c={alert:function(e){postMessage({type:\"alert\",data:e})},prompt:async function(e){for(postMessage({type:\"prompt\",data:e});void 0==n.state.promptMsg;)await new Promise(e=>setTimeout(e,0));var t=n.state.promptMsg;return n.state.promptMsg=void 0,t}},r={prompt:e=>{n.state.promptMsg=e}}},function(e,t,a){\"use strict\";var n=a(0);n.Blockly_Debuggee.actions.watch={},n.Blockly_Debuggee.actions.variables={},n.Blockly_Debuggee.actions.eval={},n.Blockly_Debuggee.actions.watch=function(){var e=[];function t(){postMessage({type:\"watches\",data:e})}return{handler:function(a){e=a;for(var c=0;c<e.length;++c)n.Blockly_Debuggee.actions.eval.evalLocal('var watches = Blockly_Debuggee.actions[\"watch\"].getWatches();watches['+c+\"].value = \"+e[c].code+\";\\n\");t()},includes:function(t){return e.includes(t)},update:function(t){e=t},update_values:function(){for(var t=\"\",a=0;a<e.length;++a)t+=\"watches[\"+a+\"].value = \"+e[a].code+\";\\n\";return'var watches = Blockly_Debuggee.actions[\"watch\"].getWatches();'+t},getWatches:function(){return e},updateDebugger:t}}(),n.Blockly_Debuggee.actions.variables=function(){var e=[];return{update:function(t){e=t},update_values:function(){for(var t=\"\",a=0;a<e.length;++a)t+=\"variables[\"+a+\"].value = \"+e[a].name+\";\\n\";return t},getVariables:function(){return e},updateDebugger:function(){postMessage({type:\"variables\",data:e})},define_variables:function(){for(var t=\"\",a=0;a<e.length;++a)t+=\"var \"+e[a].name+\";\\n\";return t}}}(),n.Blockly_Debuggee.actions.eval.evalLocal,n.Blockly_Debuggee.actions.eval.handler=function(e){n.Blockly_Debuggee.actions.eval.evalLocal(e),n.Blockly_Debuggee.actions.eval.evalLocal(n.Blockly_Debuggee.actions.variables.update_values()),n.Blockly_Debuggee.actions.variables.updateDebugger(),n.Blockly_Debuggee.actions.eval.evalLocal(n.Blockly_Debuggee.actions.watch.update_values()),n.Blockly_Debuggee.actions.watch.updateDebugger()},n.dispatcher.watch=n.Blockly_Debuggee.actions.watch.handler,n.dispatcher.eval=n.Blockly_Debuggee.actions.eval.handler},function(e,t,a){\"use strict\";a.r(t);var n=a(0);n.Blockly_Debuggee.actions.continue={},n.Blockly_Debuggee.actions.continue.handler=(()=>{n.Blockly_Debuggee.state.stepWait=!0,n.Blockly_Debuggee.state.setState(\"continue\")}),n.dispatcher.continue=n.Blockly_Debuggee.actions.continue.handler,n.Blockly_Debuggee.actions.breakpoint={},n.Blockly_Debuggee.actions.breakpoint=function(){var e=[];function t(t){return e.map(e=>{if(e.enable)return e.block_id}).includes(t)}return{handler:function(t){e=t},includes_enable:t,update:function(t){e=t},wait_view:function(e){t(e)&&postMessage({type:\"breakpoint_wait_view\",data:e})},reset_view:function(e){t(e)&&postMessage({type:\"breakpoint_reset_view\",data:e})}}}(),n.Blockly_Debuggee.actions.runToCursor=function(){return{cursorBreakpoint:\"\",handler:function(e){n.Blockly_Debuggee.actions.runToCursor.cursorBreakpoint=e,n.Blockly_Debuggee.state.stepWait=!0}}}(),n.dispatcher.breakpoint=n.Blockly_Debuggee.actions.breakpoint.handler,n.dispatcher.runToCursor=n.Blockly_Debuggee.actions.runToCursor.handler,n.Blockly_Debuggee.actions.stepIn={},n.Blockly_Debuggee.actions.stepOver={},n.Blockly_Debuggee.actions.stepOut={},n.Blockly_Debuggee.actions.stepParent={},n.Blockly_Debuggee.actions.stepIn.handler=(()=>{n.Blockly_Debuggee.state.stepWait=!0,n.Blockly_Debuggee.state.setState(\"stepIn\")}),n.Blockly_Debuggee.actions.stepOver.handler=(()=>{n.Blockly_Debuggee.state.stepWait=!0,n.Blockly_Debuggee.state.setState(\"stepOver\")}),n.Blockly_Debuggee.actions.stepOut.handler=(()=>{n.Blockly_Debuggee.state.stepWait=!0,n.Blockly_Debuggee.state.setState(\"stepOut\")}),n.Blockly_Debuggee.actions.stepParent.handler=(()=>{n.Blockly_Debuggee.state.stepWait=!0,n.Blockly_Debuggee.state.setState(\"stepParent\")}),n.dispatcher.stepIn=n.Blockly_Debuggee.actions.stepIn.handler,n.dispatcher.stepOver=n.Blockly_Debuggee.actions.stepOver.handler,n.dispatcher.stepOut=n.Blockly_Debuggee.actions.stepOut.handler,n.dispatcher.stepParent=n.Blockly_Debuggee.actions.stepParent.handler;a(4),a(1);onmessage=function(e){let t=e.data;n.dispatcher[t.type](t.data)}},,function(module,__webpack_exports__,__webpack_require__){\"use strict\";var _init_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(0),_watches_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(1),Blockly_Debuggee=__webpack_require__(0).Blockly_Debuggee,window=__webpack_require__(0).window;function update_values(){return Blockly_Debuggee.actions.variables.update_values()+Blockly_Debuggee.actions.watch.update_values()}Blockly_Debuggee.actions.start_debugging=function(){async function handler(content){if(void 0!=content){Blockly_Debuggee.actions.breakpoint.update(content.breakpoints),Blockly_Debuggee.actions.runToCursor.cursorBreakpoint=content.cursorBreakpoint,Blockly_Debuggee.actions.watch.update(content.watches),Blockly_Debuggee.actions.variables.update(content.variables);var variables=Blockly_Debuggee.actions.variables.getVariables(),watches=Blockly_Debuggee.actions.watch.getWatches(),def_variables_code=Blockly_Debuggee.actions.variables.define_variables(),variablesWatches_code='eval(update_values()); Blockly_Debuggee.actions[\"variables\"].updateDebugger(); Blockly_Debuggee.actions[\"watch\"].updateDebugger();';await eval(def_variables_code+' function evalLocal(expr){eval(expr);} Blockly_Debuggee.actions[\"eval\"].evalLocal = evalLocal;async function code(){ '+content.code+variablesWatches_code+\"}; code(); \"),postMessage({type:\"execution_finished\"})}else window.alert(\"The content is undefined.\")}async function $id(e,t,a){return a}async function wait(e,t,a){await Blockly_Debuggee.wait(e,t,a)}function isStepOver(){return Blockly_Debuggee.state.isState(\"stepOver\")}function isStepParent(){return Blockly_Debuggee.state.isState(\"stepParent\")}return{handler:handler}}(),_init_js__WEBPACK_IMPORTED_MODULE_0__.dispatcher.start_debugging=Blockly_Debuggee.actions.start_debugging.handler}]);","extractedComments":[]}